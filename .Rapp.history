length(same_sampleid)
length(same_sampleid2)
sum(same_sampleid2==same_sampleid)
head(same_sampleid2)
head(same_sampleid)
same_sampleid2 <- paste(arabicplate,arabicpair,paste(biodat$row,biodat$column,sep=""),sep=".")
sum(same_sampleid2==same_sampleid)
length(c(9:16,18:28,42))
dim(biogenotrt)
160/20
biogeno4corM <- t(biogenotrt[c(42,44,46,50,74,76,78,80,52,48,54,56),])
head(biogeno4corM)
colnames(biogeno4corM) <- c("F10.00","F10.0S","F10.B0","F10.BS","epix.00","epix.0S","epix.B0","epix.BS","od600.00","od600.0S","od600.B0","od600.BS")
###microbes and plant growth & balances analysis#
biogeno4corM <- t(biogenotrt[c(42,44,46,50,74,76,78,80,52,48,54,56),])#
colnames(biogeno4corM) <- c("F10.00","F10.0S","F10.B0","F10.BS","epix.00","epix.0S","epix.B0","epix.BS","od600.00","od600.0S","od600.B0","od600.BS")#
#
tipisoutbio <- tipxout(biogeno4corM,subbalphy,hier.phy)
dim(biogeno4corM)
dim(maanss)
dim(subbalphy)
dim(balphy)
biogeno4corM <- (biogenotrt[c(42,44,46,50,74,76,78,80,52,48,54,56),])#
row.names(biogeno4corM) <- c("F10.00","F10.0S","F10.B0","F10.BS","epix.00","epix.0S","epix.B0","epix.BS","od600.00","od600.0S","od600.B0","od600.BS")
dim(biogeno4corM)
head(biogeno4corM)
dim(bal.phy)
dim(biogeno4corM)
dim(subbalphy)
dim(maanss)
tipisoutbio <- tipxout(biogeno4corM,bal.phy,hier.phy)
head(tipisoutbio)
nBtipisout <- list()#
for(i in 1:1000){#
	nbiogeno4corM <- biogeno4corM[,sample(1:ncol(biogeno4corM),repl=F)]#
	nBtipisout[[i]] <-  tipxout(nbiogeno4corM,bal.phy,hier.phy)#
}#
Breord <- lapply(1:ncol(nBtipisout), function(prd) sapply(1:length(nBtipisout), function(n) nBtipisout[[n]][,prd]) )#
#
Bint <- sapply(1:ncol(tipisoutbio), function(p) sapply(1:nrow(tipisoutbio),function(T) findInterval(tipisoutbio[T,p],sort(Breord[[p]][T,]) ,left.open=T )/length(Breord[[p]][T,]) ) )#
Btipisoutpernode <- Bint#
Btipisoutpernode [Btipisoutpernode<0.95] <- 0
layout(matrix(1:4,ncol=2,byrow=T))#
par(mar=c(2,2,2,1))#
par(oma=c(2,2,1,1))#
	plot(subbzswM[lower.tri(subbzswM)], as.vector(distProdGenoTrtnSnM),ylab="",xlab="",ylim=c(0,0.18),xlim=c(0.0,0.8))#
		mtext("0 Salt, Microbes -",side=3,line=0.25)#
		text(0.3,0.17 ,paste("r=",round(cor(subbzswM[lower.tri(subbzswM)], as.vector(distProdGenoTrtnSnM)) ,digits=2 ) ,sep=""))#
	plot(subbzswM[lower.tri(subbzswM)], as.vector(distProdGenoTrtnSyM),ylab="",xlab="",ylim=c(0,0.18),xlim=c(0,0.8))#
		mtext("0 Salt, Microbes +",side=3,line=0.25)#
		text(0.3,0.17 ,paste("r=",round(  cor(subbzswM[lower.tri(subbzswM)], as.vector(distProdGenoTrtnSyM))    ,digits=2 ) ,sep=""))#
	plot(subbzswM[lower.tri(subbzswM)], as.vector(distProdGenoTrtySnM),ylab="",xlab="",ylim=c(0,0.18),xlim=c(0,0.8))#
		mtext("0.8 g/L Salt, Microbes -",side=3,line=0.25)#
		mtext("Genotype euclidean distance of Products",side=2,adj=-0.25,line=2)#
		text(0.3,0.17 ,paste("r=",round(  cor(subbzswM[lower.tri(subbzswM)], as.vector(distProdGenoTrtySnM))   ,digits=2 ) ,sep=""))#
	plot(subbzswM[lower.tri(subbzswM)], as.vector(distProdGenoTrtySyM),ylab="",xlab="",ylim=c(0,0.18),xlim=c(0,0.8))#
		mtext("Weighted Unifrac Distance of genotypes",side=1,adj=1.5,line=2)#
		mtext("0.8 g/L Salt, Microbes +",side=3,line=0.25)#
		text(0.3,0.17 ,paste("r=",round(  cor(subbzswM[lower.tri(subbzswM)], as.vector(distProdGenoTrtySyM))  ,digits=2 ) ,sep=""))
str(nBtipisout)
Breord <- lapply(1:ncol(nBtipisout), function(prd) sapply(1:length(nBtipisout), function(n) nBtipisout[[n]][,prd]) )
Breord <- lapply(1:ncol(tipisoutbio), function(prd) sapply(1:length(nBtipisout), function(n) nBtipisout[[n]][,prd]) )
Bint <- sapply(1:ncol(tipisoutbio), function(p) sapply(1:nrow(tipisoutbio),function(T) findInterval(tipisoutbio[T,p],sort(Breord[[p]][T,]) ,left.open=T )/length(Breord[[p]][T,]) ) )#
Btipisoutpernode <- Bint#
Btipisoutpernode [Btipisoutpernode<0.95] <- 0
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, biotodfpn[,c(1:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, biotodfpn[,c(5:8)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, biotodfpn[,c(9:12)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 20, high=rgb(0,0,1),low="gray",legend_title="times outlier")#
p3
row.names(tipisoutbio)<- hier.phy3$tip.label#
row.names(Btipisoutpernode)<- hier.phy3$tip.label#
biotodf <- as.data.frame(tipisoutbio)#
biotodfpn <- as.data.frame(Btipisoutpernode)#
colnames(biotodf) <-  c("F10"," ","F10BZT","  ","epix"," ","epixBZT","  ","od600"," ","od600BZT","  ")#
colnames(biotodfpn) <- c("F10"," ","F10BZT","  ","epix"," ","epixBZT","  ","od600"," ","od600BZT","  ")
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, biotodfpn[,c(1:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, biotodfpn[,c(5:8)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, biotodfpn[,c(9:12)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 20, high=rgb(0,0,1),low="gray",legend_title="times outlier")#
p3
pdf("~/Dropbox/salt BT round 2/ggtreeheatv3bio.pdf",width=8,height=10)#
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, biotodf[,c(1:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, biotodf[,c(5:8)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, biotodf[,c(9:12)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 20, high=rgb(0,0,1),low="gray",legend_title="times outlier")#
p3#
dev.off()#
#
pdf("~/Dropbox/salt BT round 2/ggtreeheatv3interval.pdf",width=8,height=10)#
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, biotodfpn[,c(1:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, biotodfpn[,c(5:8)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, biotodfpn[,c(9:12)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 20, high=rgb(0,0,1),low="gray",legend_title="times outlier")#
p3#
dev.off()
mixAAsaltm <- sapply(sort(unique(transf$Genotype)), function(g) sapply(1:ncol(mixAA), function(p) mean(mixAA[transf$Genotype==g & transf$Salt=="0.8" &  transf$Microbes=="+",p],na.rm=T) ))#
mixAAnosaltm <- sapply(sort(unique(transf$Genotype)), function(g) sapply(1:ncol(mixAA), function(p) mean(mixAA[transf$Genotype==g & transf$Salt=="0" &  transf$Microbes=="+",p],na.rm=T)))#
mixAAsaltn <- sapply(sort(unique(transf$Genotype)), function(g) sapply(1:ncol(mixAA), function(p) mean(mixAA[transf$Genotype==g & transf$Salt=="0.8" &  transf$Microbes=="-",p],na.rm=T) ))#
mixAAnosaltn <- sapply(sort(unique(transf$Genotype)), function(g) sapply(1:ncol(mixAA), function(p) mean(mixAA[transf$Genotype==g & transf$Salt=="0" &  transf$Microbes=="-",p],na.rm=T)))#
#
cor(mixAAsaltm,mixAAsaltn)#
cor(mixAAnosaltm,mixAAnosaltn)
cor(mixAAsaltm,mixAAsaltn,use="complete.obs")#
cor(mixAAnosaltm,mixAAnosaltn,use="complete.obs")
head(mixAAsaltm)
head(transf)
mixAAsaltm <- sapply(sort(unique(transf$Genotype)), function(g) sapply(1:ncol(mixAA), function(p) mean(mixAA[transf$Genotype==g & transf$Salt=="0.8" &  transf$Microbes=="Yes",p],na.rm=T) ))#
mixAAnosaltm <- sapply(sort(unique(transf$Genotype)), function(g) sapply(1:ncol(mixAA), function(p) mean(mixAA[transf$Genotype==g & transf$Salt=="0" &  transf$Microbes=="Yes",p],na.rm=T)))#
mixAAsaltn <- sapply(sort(unique(transf$Genotype)), function(g) sapply(1:ncol(mixAA), function(p) mean(mixAA[transf$Genotype==g & transf$Salt=="0.8" &  transf$Microbes=="No",p],na.rm=T) ))#
mixAAnosaltn <- sapply(sort(unique(transf$Genotype)), function(g) sapply(1:ncol(mixAA), function(p) mean(mixAA[transf$Genotype==g & transf$Salt=="0" &  transf$Microbes=="No",p],na.rm=T)))#
#
cor(mixAAsaltm,mixAAsaltn,use="complete.obs")#
cor(mixAAnosaltm,mixAAnosaltn,use="complete.obs")
dim(mixAA)
dim(products)
cor(mixAAnosaltm[1,], mixAAnosaltn[1,])
cor(t(mixAAsaltm),t(mixAAsaltn),use="complete.obs")#
cor(t(mixAAnosaltm),t(mixAAnosaltn),use="complete.obs")
diag(cor(t(mixAAsaltm),t(mixAAsaltn),use="complete.obs"))
diag(cor(t(mixAAnosaltm),t(mixAAnosaltn),use="complete.obs"))
colnames(mixAA)
dim(mixAA)
dim(subbioexactdf)
head(subbioexactdf)
dim(subbioexactdf)
transfbiocc <- cc(subbioexactdf[,10:16],logprods)#
transfbiocc_sum <- CCsummary(transfbiocc)	#
transfbiocc2 <- cc(subbioexactdf[,10:16],mixAA)#
transfbiocc_sum2 <- CCsummary(transfbiocc2)	#
transfbiocc3 <- cc(subbioexactdf[,c(14:16,42)],mixAA)#
transfbiocc_sum3 <- CCsummary(transfbiocc3)
transfbiocc_sum
transfbiocc_sum2
transfbiocc_sum3
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc$scores$yscores[,1]~transfbiocc$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc$scores$yscores[,2]~transfbiocc$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc$scores$corr.Y.yscores[,1:3],#
						transfbiocc$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =9+7  )[9:10])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =9+7),side=1,labels = c(prodnames,colnames(subbioexactdf)[10:16]),las=2 )
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiotrtcc$scores$yscores[,1]~transfbiotrtcc$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiotrtcc_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiotrtcc_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiotrtcc_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiotrtcc$scores$yscores[,2]~transfbiotrtcc$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiotrtcc_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiotrtcc_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiotrtcc_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiotrtcc$scores$corr.Y.yscores[,1:3],#
						transfbiotrtcc$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =9+11  )[9:10])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =9+11),side=1,labels = c(prodnames,colnames(subbioexactdf)[18:28]),las=2 )
transfbiotrtcc <- cc(subbioexactdf[,18:28],logprods)#
transfbiotrtcc_sum <- CCsummary(transfbiotrtcc)
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiotrtcc$scores$yscores[,1]~transfbiotrtcc$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiotrtcc_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiotrtcc_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiotrtcc_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiotrtcc$scores$yscores[,2]~transfbiotrtcc$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiotrtcc_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiotrtcc_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiotrtcc_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiotrtcc$scores$corr.Y.yscores[,1:3],#
						transfbiotrtcc$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =9+11  )[9:10])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =9+11),side=1,labels = c(prodnames,colnames(subbioexactdf)[18:28]),las=2 )
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc2$scores$yscores[,1]~transfbiocc2$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc2$scores$yscores[,2]~transfbiocc2$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc2$scores$corr.Y.yscores[,1:3],#
						transfbiocc2$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =9+7  )[9:10])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =9+7),side=1,labels = c(prodnames,colnames(subbioexactdf)[10:16]),las=2 )
transfbiocc2$scores$corr.Y.yscores
transfbiocc2$scores$corr.X.xscores
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc2$scores$yscores[,1]~transfbiocc2$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc2$scores$yscores[,2]~transfbiocc2$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc2$scores$corr.Y.yscores[,1:3],#
						transfbiocc2$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =8+7  )[8:9])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =9+7),side=1,labels = c(prodnames,colnames(subbioexactdf)[10:16]),las=2 )
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc$scores$yscores[,1]~transfbiocc$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc$scores$yscores[,2]~transfbiocc$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc$scores$corr.Y.yscores[,1:3],#
						transfbiocc$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =9+7  )[9:10])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =9+7),side=1,labels = c(prodnames,colnames(subbioexactdf)[10:16]),las=2 )
transfbiocc2_sum
transfbiocc2 <- cc(subbioexactdf[,10:16],mixAA)#
transfbiocc_sum2 <- CCsummary(transfbiocc2)	#
transfbiocc3 <- cc(subbioexactdf[,c(14:16,42)],mixAA)#
transfbiocc_sum3 <- CCsummary(transfbiocc3)
transfbiocc_sum2 <- CCsummary(transfbiocc2)	#
transfbiocc3 <- cc(subbioexactdf[,c(14:16,42)],mixAA)#
transfbiocc_sum3 <- CCsummary(transfbiocc3)
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc$scores$yscores[,1]~transfbiocc$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc$scores$yscores[,2]~transfbiocc$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc$scores$corr.Y.yscores[,1:3],#
						transfbiocc$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =9+7  )[9:10])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =9+7),side=1,labels = c(prodnames,colnames(subbioexactdf)[10:16]),las=2 )
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc2$scores$yscores[,1]~transfbiocc2$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc2$scores$yscores[,2]~transfbiocc2$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc2$scores$corr.Y.yscores[,1:3],#
						transfbiocc2$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =8+7  )[8:9])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =9+7),side=1,labels = c(prodnames,colnames(subbioexactdf)[10:16]),las=2 )
transfbiocc2_sum <- CCsummary(transfbiocc2)	#
transfbiocc3 <- cc(subbioexactdf[,c(14:16,42)],mixAA)#
transfbiocc3_sum <- CCsummary(transfbiocc3)
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc2$scores$yscores[,1]~transfbiocc2$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc2$scores$yscores[,2]~transfbiocc2$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc2$scores$corr.Y.yscores[,1:3],#
						transfbiocc2$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =8+7  )[8:9])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =9+7),side=1,labels = c(prodnames,colnames(subbioexactdf)[10:16]),las=2 )
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc3$scores$yscores[,1]~transfbiocc3$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc3_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc3_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc3_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc3$scores$yscores[,2]~transfbiocc3$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc3_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc3_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc3_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc3$scores$corr.Y.yscores[,1:3],#
						transfbiocc3$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =8+7  )[8:9])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =9+7),side=1,labels = c(prodnames,colnames(subbioexactdf)[10:16]),las=2 )
prodnames <- colnames(products)#
prodnames2 <- colnames(mixAA)
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc2$scores$yscores[,1]~transfbiocc2$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc2$scores$yscores[,2]~transfbiocc2$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc2$scores$corr.Y.yscores[,1:3],#
						transfbiocc2$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =8+7  )[8:9])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =9+7),side=1,labels = c(prodnames2,colnames(subbioexactdf)[10:16]),las=2 )
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc2$scores$yscores[,1]~transfbiocc2$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc2$scores$yscores[,2]~transfbiocc2$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc2$scores$corr.Y.yscores[,1:3],#
						transfbiocc2$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =8+7  )[8:9])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =8+7),side=1,labels = c(prodnames2,colnames(subbioexactdf)[10:16]),las=2 )
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc$scores$yscores[,1]~transfbiocc$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc$scores$yscores[,2]~transfbiocc$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc$scores$corr.Y.yscores[,1:3],#
						transfbiocc$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =9+7  )[9:10])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =9+7),side=1,labels = c(prodnames,colnames(subbioexactdf)[10:16]),las=2 )
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc2$scores$yscores[,1]~transfbiocc2$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc2$scores$yscores[,2]~transfbiocc2$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc2_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc2_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc2$scores$corr.Y.yscores[,1:3],#
						transfbiocc2$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =8+7  )[8:9])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =8+7),side=1,labels = c(prodnames2,colnames(subbioexactdf)[10:16]),las=2 )
layout(matrix(c(1:2,3,3),ncol=2,byrow=T))#
par(mar=c(5,3,3,1))#
par(oma=c(2,3,1,0))#
	plot(transfbiocc3$scores$yscores[,1]~transfbiocc3$scores$xscores[,1], xlab="",ylab="")#
		mtext("Products score",side=2,line=3.5)#
		mtext(paste(round(100*transfbiocc3_sum$vary.expl[1]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc3_sum$varx.expl[1]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc3_sum$cov.expl[1]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 1 (n.s.)",side=3,line=1.25)#
	plot(transfbiocc3$scores$yscores[,2]~transfbiocc3$scores$xscores[,2], xlab="",ylab="")#
		mtext("Biodata score",side=1,line=3.5,adj = -1.5)#
		mtext(paste(round(100*transfbiocc3_sum$vary.expl[2]),"% var",sep=""),side=2,line=2)#
		mtext(paste(round(100*transfbiocc3_sum$varx.expl[2]),"% var",sep=""),side=1,line=2)#
		mtext(paste(round(100*transfbiocc3_sum$cov.expl[2]),"% cov",sep=""),side=3,line=0.25)#
		mtext("CCA Axis 2 (n.s.)",side=3,line=1.25)#
par(mar=c(6,3,0,1))#
	image(as.matrix(rbind(transfbiocc3$scores$corr.Y.yscores[,1:3],#
						transfbiocc3$scores$corr.X.xscores[,1:3])),#
				xaxt="n",yaxt="n",ylab="",xlab="",zlim=c(-1,1),col=rwb(100))#
 		abline(v=sum(seq(from = 0, to = 1, length.out =8+4  )[8:9])/2)#
		axis(at=seq(from=0,to=1,length.out=3),side=2,labels=c("CCA axis 1","CCA axis 2", "CCA axis 3"),las=2)#
 		axis(at = seq(from = 0, to = 1, length.out =8+4),side=1,labels = c(prodnames2,colnames(subbioexactdf)[c(14:16,42)]),las=2 )
cor(transf$density,transfbiocc$scores$yscores)#using km instead of density, but similar#
cor(transf$km,transfbiocc$scores$yscores)##
cor(transf$km,transfbiotrtcc$scores$yscores)
cor(transf$km,transfbiocc2$scores$yscores)
cor(transf$density,transfbiocc2$scores$yscores)
cor(transf$density,transfbiocc3$scores$yscores)
cor(transf$km,transfbiocc3$scores$yscores)
plot(transf$km,transfbiocc3$scores$yscores)
plot(transf$km~transfbiocc3$scores$yscores)
transfbiocc3$scores$yscores
plot(transf$km~transfbiocc3$scores$yscores[,1])
plot(transf$density~transfbiocc3$scores$yscores[,1])
cor(transf$km,transfbiocc3$scores$yscores)
plot(transf$density,transfbiocc3$scores$yscores[,1])
plot(transf$km,transfbiocc3$scores$yscores[,1])
maanss <-rbind(mixAAsaltm,mixAAnosaltm)#
	rownames(maanss) <- c( colnames(mixAA), paste(colnames(mixAA),"_S",sep="")  )#
tipisout <- tipxout(maanss,subbalphy,hier.phy)#
#
ntipisout <- list()#
for(i in 1:1000){#
	nmaanss <- maanss[,sample(1:ncol(maanss),repl=F)]#
	ntipisout[[i]] <-  tipxout(nmaanss,subbalphy,hier.phy)#
}#
reord <- lapply(1:ncol(tipisout), function(prd) sapply(1:length(ntipisout), function(n) ntipisout[[n]][,prd]) )#
#
int <- sapply(1:ncol(tipisout), function(p) sapply(1:nrow(tipisout),function(T) findInterval(tipisout[T,p],sort(reord[[p]][T,]) ,left.open=T )/length(reord[[p]][T,]) ) )#
tipisoutpernode <- int#
tipisoutpernode [tipisoutpernode<0.95] <- 0
row.names(tipisoutbio)<- hier.phy3$tip.label#
row.names(Btipisoutpernode)<- hier.phy3$tip.label#
biotodf <- as.data.frame(tipisoutbio)#
biotodfpn <- as.data.frame(Btipisoutpernode)#
colnames(biotodf) <-  c("F10"," ","F10BZT","  ","epix"," ","epixBZT","  ","od600"," ","od600BZT","  ")#
colnames(biotodfpn) <- c("F10"," ","F10BZT","  ","epix"," ","epixBZT","  ","od600"," ","od600BZT","  ")
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, biotodf[,c(1:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, biotodf[,c(5:8)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, biotodf[,c(9:12)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 20, high=rgb(0,0,1),low="gray",legend_title="times outlier")#
p3
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, biotodfpn[,c(1:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, biotodfpn[,c(5:8)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, biotodfpn[,c(9:12)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 20, high=rgb(0,0,1),low="gray",legend_title="times outlier")#
p3
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, rotodf[,c(3:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, rotodf[,c(5:6)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, rotodf[,c(13:14)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 13)#
p4 <-gheatmap(p3, rotodf[,c(15:16)], offset=0.225, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0.75,0,0.75),low="gray",legend_title="times outlier") #
p5 <- p4 + new_scale_fill()#
p5 <- gheatmap(p5, rotodf[,c(9:10)], offset=0.30, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0,0,1),low="gray") #
p6 <- gheatmap(p5, rotodf[,c(11:12)], offset=0.375, width=.1,#
         colnames_angle=90, colnames_offset_y = 25,  high=rgb(0,0,0.75),low="gray",legend_title="times outlier") #
p6
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, rotodfpn[,c(3:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, rotodfpn[,c(5:6)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="interval") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, rotodfpn[,c(13:14)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 13)#
p4 <-gheatmap(p3, rotodfpn[,c(15:16)], offset=0.225, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0.75,0,0.75),low="gray",legend_title="interval") #
p5 <- p4 + new_scale_fill()#
p5 <- gheatmap(p5, rotodfpn[,c(9:10)], offset=0.30, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0,0,1),low="gray") #
p6 <- gheatmap(p5, rotodfpn[,c(11:12)], offset=0.375, width=.1,#
         colnames_angle=90, colnames_offset_y = 25,  high=rgb(0,0,0.75),low="gray",legend_title="interval") #
p6
reorderTO <- tipisout[,c(1,9,2,10,3,11,4,12,5,13,6,14,7,15,8,16)] #first is salt then without salt#
row.names(reorderTO)<- hier.phy3$tip.label#
reorderTOpn <- tipisoutpernode[,c(1,9,2,10,3,11,4,12,5,13,6,14,7,15,8,16)]#
row.names(reorderTOpn)<- hier.phy3$tip.label#
rotodf <- as.data.frame(reorderTO)#
rotodfpn <- as.data.frame(reorderTOpn)#
transfnames <- c("BZT","gly.BZT","BZTa+aa","aniline","amino3ph","phenanzine","mBZT","moxyBZT")#
colnames(rotodf) <- c("BZT"," ","gly.BZT"," ","BZTa+aa"," ","aniline","aniline","amino3ph"," ","phenanzine"," ","mBZT"," ","moxyBZT"," ")#
colnames(rotodfpn) <- c("BZT"," ","gly.BZT"," ","BZTa+aa"," ","aniline","aniline","amino3ph"," ","phenanzine"," ","mBZT"," ","moxyBZT"," ")
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, rotodfpn[,c(3:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, rotodfpn[,c(5:6)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="interval") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, rotodfpn[,c(13:14)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 13)#
p4 <-gheatmap(p3, rotodfpn[,c(15:16)], offset=0.225, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0.75,0,0.75),low="gray",legend_title="interval") #
p5 <- p4 + new_scale_fill()#
p5 <- gheatmap(p5, rotodfpn[,c(9:10)], offset=0.30, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0,0,1),low="gray") #
p6 <- gheatmap(p5, rotodfpn[,c(11:12)], offset=0.375, width=.1,#
         colnames_angle=90, colnames_offset_y = 25,  high=rgb(0,0,0.75),low="gray",legend_title="interval") #
p6
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, rotodf[,c(3:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, rotodf[,c(5:6)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, rotodf[,c(13:14)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 13)#
p4 <-gheatmap(p3, rotodf[,c(15:16)], offset=0.225, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0.75,0,0.75),low="gray",legend_title="times outlier") #
p5 <- p4 + new_scale_fill()#
p5 <- gheatmap(p5, rotodf[,c(9:10)], offset=0.30, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0,0,1),low="gray") #
p6 <- gheatmap(p5, rotodf[,c(11:12)], offset=0.375, width=.1,#
         colnames_angle=90, colnames_offset_y = 25,  high=rgb(0,0,0.75),low="gray",legend_title="times outlier") #
p6
#transformation products balance plots#
pdf("~/Dropbox/salt BT round 2/testggtreeheatv3_monly.pdf",width=8,height=10)#
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, rotodf[,c(3:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, rotodf[,c(5:6)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, rotodf[,c(13:14)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 13)#
p4 <-gheatmap(p3, rotodf[,c(15:16)], offset=0.225, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0.75,0,0.75),low="gray",legend_title="times outlier") #
p5 <- p4 + new_scale_fill()#
p5 <- gheatmap(p5, rotodf[,c(9:10)], offset=0.30, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0,0,1),low="gray") #
p6 <- gheatmap(p5, rotodf[,c(11:12)], offset=0.375, width=.1,#
         colnames_angle=90, colnames_offset_y = 25,  high=rgb(0,0,0.75),low="gray",legend_title="times outlier") #
p6#
dev.off()#
#
pdf("~/Dropbox/salt BT round 2/testggtreeheatv3interval_monly.pdf",width=8,height=10)#
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, rotodfpn[,c(3:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, rotodfpn[,c(5:6)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="interval") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, rotodfpn[,c(13:14)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 13)#
p4 <-gheatmap(p3, rotodfpn[,c(15:16)], offset=0.225, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0.75,0,0.75),low="gray",legend_title="interval") #
p5 <- p4 + new_scale_fill()#
p5 <- gheatmap(p5, rotodfpn[,c(9:10)], offset=0.30, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0,0,1),low="gray") #
p6 <- gheatmap(p5, rotodfpn[,c(11:12)], offset=0.375, width=.1,#
         colnames_angle=90, colnames_offset_y = 25,  high=rgb(0,0,0.75),low="gray",legend_title="interval") #
p6#
dev.off()
pdf("~/Dropbox/salt BT round 2/ggtreeheatv3bio_monly.pdf",width=8,height=10)#
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, biotodf[,c(1:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, biotodf[,c(5:8)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, biotodf[,c(9:12)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 20, high=rgb(0,0,1),low="gray",legend_title="times outlier")#
p3#
dev.off()#
#
pdf("~/Dropbox/salt BT round 2/ggtreeheatv3intervalbio_monly.pdf",width=8,height=10)#
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, biotodfpn[,c(1:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, biotodfpn[,c(5:8)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, biotodfpn[,c(9:12)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 20, high=rgb(0,0,1),low="gray",legend_title="times outlier")#
p3#
dev.off()
str(biogenotrt)
head(biogenotrt)
colnames(biodat)
14*8
14*7
6*8
5*8
7*8
###microbes and plant growth & balances analysis#
biogeno4corM <- (biogenotrt[c(42,44,46,48,74,76,78,80,50,52,54,56),]) #alternating means only inoculated#
row.names(biogeno4corM) <- c("F10.00","F10.0S","F10.B0","F10.BS","epix.00","epix.0S","epix.B0","epix.BS","od600.00","od600.0S","od600.B0","od600.BS")#
tipisoutbio <- tipxout(biogeno4corM,bal.phy,hier.phy)#
nBtipisout <- list()#
for(i in 1:1000){#
	nbiogeno4corM <- biogeno4corM[,sample(1:ncol(biogeno4corM),repl=F)]#
	nBtipisout[[i]] <-  tipxout(nbiogeno4corM,bal.phy,hier.phy)#
}#
Breord <- lapply(1:ncol(tipisoutbio), function(prd) sapply(1:length(nBtipisout), function(n) nBtipisout[[n]][,prd]) )#
Bint <- sapply(1:ncol(tipisoutbio), function(p) sapply(1:nrow(tipisoutbio),function(T) findInterval(tipisoutbio[T,p],sort(Breord[[p]][T,]) ,left.open=T )/length(Breord[[p]][T,]) ) )#
Btipisoutpernode <- Bint#
Btipisoutpernode [Btipisoutpernode<0.95] <- 0#
#
row.names(tipisoutbio)<- hier.phy3$tip.label#
row.names(Btipisoutpernode)<- hier.phy3$tip.label#
biotodf <- as.data.frame(tipisoutbio)#
biotodfpn <- as.data.frame(Btipisoutpernode)#
colnames(biotodf) <-  c("F10"," ","F10BZT","  ","epix"," ","epixBZT","  ","od600"," ","od600BZT","  ")#
colnames(biotodfpn) <- c("F10"," ","F10BZT","  ","epix"," ","epixBZT","  ","od600"," ","od600BZT","  ")#
pdf("~/Dropbox/salt BT round 2/ggtreeheatv3bio_monly.pdf",width=8,height=10)#
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, biotodf[,c(1:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, biotodf[,c(5:8)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, biotodf[,c(9:12)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 20, high=rgb(0,0,1),low="gray",legend_title="times outlier")#
p3#
dev.off()#
pdf("~/Dropbox/salt BT round 2/ggtreeheatv3intervalbio_monly.pdf",width=8,height=10)#
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, biotodfpn[,c(1:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, biotodfpn[,c(5:8)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, biotodfpn[,c(9:12)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 20, high=rgb(0,0,1),low="gray",legend_title="times outlier")#
p3#
dev.off()#
###no microbes#
#
maanssN <-rbind(mixAAsaltn,mixAAnosaltn)#
	rownames(maanssN) <- c( colnames(mixAA), paste(colnames(mixAA),"_S",sep="")  )#
tipisoutN <- tipxout(maanssN,subbalphy,hier.phy)#
ntipisoutN <- list()#
for(i in 1:1000){#
	nmaanssN <- maanssN[,sample(1:ncol(maanssN),repl=F)]#
	ntipisoutN[[i]] <-  tipxout(nmaanssN,subbalphy,hier.phy)#
}#
reordN <- lapply(1:ncol(tipisoutN), function(prd) sapply(1:length(ntipisoutN), function(n) ntipisoutN[[n]][,prd]) )#
intN <- sapply(1:ncol(tipisoutN), function(p) sapply(1:nrow(tipisoutN),function(T) findInterval(tipisoutN[T,p],sort(reordN[[p]][T,]) ,left.open=T )/length(reord[[p]][T,]) ) )#
tipisoutpernodeN <- intN#
tipisoutpernodeN [tipisoutpernodeN<0.95] <- 0#
reorderTON <- tipisoutN[,c(1,9,2,10,3,11,4,12,5,13,6,14,7,15,8,16)] #first is salt then without salt#
row.names(reorderTON)<- hier.phy3$tip.label#
reorderTOpnN <- tipisoutpernodeN[,c(1,9,2,10,3,11,4,12,5,13,6,14,7,15,8,16)]#
row.names(reorderTOpnN)<- hier.phy3$tip.label#
rotodf <- as.data.frame(reorderTON)#
rotodfpn <- as.data.frame(reorderTOpnN)#
transfnames <- c("BZT","gly.BZT","BZTa+aa","aniline","amino3ph","phenanzine","mBZT","moxyBZT")#
colnames(rotodf) <- c("BZT"," ","gly.BZT"," ","BZTa+aa"," ","aniline","aniline","amino3ph"," ","phenanzine"," ","mBZT"," ","moxyBZT"," ")#
colnames(rotodfpn) <- c("BZT"," ","gly.BZT"," ","BZTa+aa"," ","aniline","aniline","amino3ph"," ","phenanzine"," ","mBZT"," ","moxyBZT"," ")#
#transformation products balance plots#
pdf("~/Dropbox/salt BT round 2/testggtreeheatv3_nonly.pdf",width=8,height=10)#
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, rotodf[,c(3:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, rotodf[,c(5:6)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, rotodf[,c(13:14)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 13)#
p4 <-gheatmap(p3, rotodf[,c(15:16)], offset=0.225, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0.75,0,0.75),low="gray",legend_title="times outlier") #
p5 <- p4 + new_scale_fill()#
p5 <- gheatmap(p5, rotodf[,c(9:10)], offset=0.30, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0,0,1),low="gray") #
p6 <- gheatmap(p5, rotodf[,c(11:12)], offset=0.375, width=.1,#
         colnames_angle=90, colnames_offset_y = 25,  high=rgb(0,0,0.75),low="gray",legend_title="times outlier") #
p6#
dev.off()#
pdf("~/Dropbox/salt BT round 2/testggtreeheatv3interval_nonly.pdf",width=8,height=10)#
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, rotodfpn[,c(3:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, rotodfpn[,c(5:6)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="interval") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, rotodfpn[,c(13:14)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 13)#
p4 <-gheatmap(p3, rotodfpn[,c(15:16)], offset=0.225, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0.75,0,0.75),low="gray",legend_title="interval") #
p5 <- p4 + new_scale_fill()#
p5 <- gheatmap(p5, rotodfpn[,c(9:10)], offset=0.30, width=.1,#
         colnames_angle=90, colnames_offset_y = 21,  high=rgb(0,0,1),low="gray") #
p6 <- gheatmap(p5, rotodfpn[,c(11:12)], offset=0.375, width=.1,#
         colnames_angle=90, colnames_offset_y = 25,  high=rgb(0,0,0.75),low="gray",legend_title="interval") #
p6#
dev.off()#
#
biogeno4corN <- (biogenotrt[c(41,43,45,47,73,75,77,79,49,51,53,55),]) #alternating means only inoculated#
row.names(biogeno4corN) <- c("F10.00","F10.0S","F10.B0","F10.BS","epix.00","epix.0S","epix.B0","epix.BS","od600.00","od600.0S","od600.B0","od600.BS")#
tipisoutbioN <- tipxout(biogeno4corN,bal.phy,hier.phy)#
nBtipisoutN <- list()#
for(i in 1:1000){#
	nbiogeno4corN <- biogeno4corN[,sample(1:ncol(biogeno4corN),repl=F)]#
	nBtipisoutN[[i]] <-  tipxout(nbiogeno4corN,bal.phy,hier.phy)#
}#
BreordN <- lapply(1:ncol(tipisoutbioN), function(prd) sapply(1:length(nBtipisoutN), function(n) nBtipisoutN[[n]][,prd]) )#
BintN <- sapply(1:ncol(tipisoutbioN), function(p) sapply(1:nrow(tipisoutbioN),function(T) findInterval(tipisoutbioN[T,p],sort(BreordN[[p]][T,]) ,left.open=T )/length(BreordN[[p]][T,]) ) )#
Btipisoutpernode <- BintN#
Btipisoutpernode [Btipisoutpernode<0.95] <- 0#
#
row.names(tipisoutbioN)<- hier.phy3$tip.label#
row.names(Btipisoutpernode)<- hier.phy3$tip.label#
biotodf <- as.data.frame(tipisoutbioN)#
biotodfpn <- as.data.frame(Btipisoutpernode)#
colnames(biotodf) <-  c("F10"," ","F10BZT","  ","epix"," ","epixBZT","  ","od600"," ","od600BZT","  ")#
colnames(biotodfpn) <- c("F10"," ","F10BZT","  ","epix"," ","epixBZT","  ","od600"," ","od600BZT","  ")#
pdf("~/Dropbox/salt BT round 2/ggtreeheatv3bio_nonly.pdf",width=8,height=10)#
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, biotodf[,c(1:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, biotodf[,c(5:8)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, biotodf[,c(9:12)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 20, high=rgb(0,0,1),low="gray",legend_title="times outlier")#
p3#
dev.off()#
pdf("~/Dropbox/salt BT round 2/ggtreeheatv3intervalbio_nonly.pdf",width=8,height=10)#
gtree <- ggtree(hier.phynodenams,ladderize=F,color="gray") + geom_hilight(data=filldat, mapping=aes(node=id, fill=type,extend=5),show.legend=FALSE)  + geom_nodelab()#
p <- gtree + new_scale_fill()#
p1 <- gheatmap(p, biotodfpn[,c(1:4)],  high=rgb(1,0,0),low="gray",offset=0, width=.1,#)#. , #,#
              colnames_angle=90, colnames_offset_y = 17)#
p2 <-gheatmap(p1, biotodfpn[,c(5:8)], offset=0.075, width=.1,#
         colnames_angle=90, colnames_offset_y = 20 ,  high=rgb(0.75,0,0),low="gray",legend_title="times outlier") #
p3 <- p2 + new_scale_fill()#
p3 <-gheatmap(p3, biotodfpn[,c(9:12)], offset=0.15, width=.1,#
         colnames_angle=90, colnames_offset_y = 20, high=rgb(0,0,1),low="gray",legend_title="times outlier")#
p3#
dev.off()
head(transf)
head(mixAA)
mixAAtrt <- cbind(transf$Genotype, transf$Salt, transf$Microbes, transf$density, transf$km, mixAA)
head(mixAAtrt)
mixAAtrt <- cbind(transf$Genotype, transf$Salt, Microbes = transf$Microbes, transf$density, transf$km, mixAA)
head(mixAAtrt)
mixAAtrt <- cbind(transf$Genotype, transf$Salt, Microbes = transf$Microbes, transf$density, transf$km, mixAA)
head(mixAAtrt)
mixAAtrt <- cbind(Genotype=transf$Genotype, Salt=transf$Salt, Microbes = transf$Microbes, rddens =transf$density, km= transf$km, mixAA)
head(mixAAtrt)
summary(MCMCglmm(conc_corrected~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes + rddens:Microbes:Salt,data=transf,nitt=10000,verbose=F)#
)
MCMCglmm(conc_corrected~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes + rddens:Microbes:Salt,data=mixAAtrt,nitt=10000,verbose=F)
summary(MCMCglmm(conc_corrected~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes + rddens:Microbes:Salt,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(conc_corrected~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(conc_corrected~Microbes + Salt +rddens +rddens:Microbes ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(conc_corrected~Microbes + Salt +rddens + rddens:Salt  ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(conc_corrected~Microbes + Salt +rddens  ,data=mixAAtrt,nitt=10000,verbose=F))
head(mixAA)
head(transf)
summary(MCMCglmm(glycosylatedBZT ~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes + rddens:Microbes:Salt,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(glycosylatedBZT ~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(glycosylatedBZT ~Microbes + Salt +rddens + rddens:Salt + ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(glycosylatedBZT ~Microbes + Salt +rddens + rddens:Salt  ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(glycosylatedBZT ~Microbes + Salt +rddens + rddens:Microbes ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(glycosylatedBZT ~Microbes + Salt +rddens ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(glycosylatedBZT ~Microbes + Salt ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(glycosylatedBZT ~ Salt +rddens ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(glycosylatedBZT ~Microbes  +rddens ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(glycosylatedBZT ~Microbes ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(glycosylatedBZT ~Salt ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(glycosylatedBZT ~rddens ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(BZTa+BZTaa ~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes + rddens:Microbes:Salt,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm("BZTa+BZTaa" ~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes + rddens:Microbes:Salt,data=mixAAtrt,nitt=10000,verbose=F))
colnames(mixAAtrt)[colnames(mixAAtrt)=="BZTa+BZTaa"] <- "BZTaplusBZTaa"
head(mixAAtrt)
summary(MCMCglmm(BZTaplusBZTaa ~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes + rddens:Microbes:Salt,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(BZTaplusBZTaa ~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(BZTaplusBZTaa ~Microbes + Salt +rddens + rddens:Salt + ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(BZTaplusBZTaa ~Microbes + Salt +rddens + rddens:Salt  ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(BZTaplusBZTaa ~Microbes + Salt +rddens +  ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(BZTaplusBZTaa ~Microbes + Salt +rddens  ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(BZTaplusBZTaa ~ Salt +rddens  ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(BZTaplusBZTaa ~ rddens  ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(phenanzine ~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes + rddens:Microbes:Salt,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(phenazine ~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes + rddens:Microbes:Salt,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(phenazine ~Microbes + Salt +rddens + rddens:Salt + rddens:Microbes ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(phenazine ~Microbes + Salt +rddens +  rddens:Microbes ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(phenazine ~Microbes + Salt +rddens ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(phenazine ~  Salt +rddens ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(phenazine ~Microbes  +rddens ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(phenazine ~  rddens ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(conc_corrected~ Salt +rddens  ,data=mixAAtrt,nitt=10000,verbose=F))
summary(MCMCglmm(BZTaplusBZTaa ~ rddens  ,data=mixAAtrt,nitt=10000,verbose=F))
100*.358*.529
100-100*.358*.529
library(UpSetR) #for set plots#
library(MCMCglmm) #for models#
library(grDevices) #for color#
#
HPDi <- function(vect,prob){#
	int <- HPDinterval(as.mcmc(vect),prob=prob)#
	return(int)#
}#
#
invlogistic <- function(x){exp(x)/(1+ exp(x))}#
std.error <- function(dat, na.rm=TRUE) {sd(dat,na.rm=na.rm)/sqrt(length(dat))}#defaults to na.rm=T#
#################################################################################
####read in data#
#################################################################################
# analyze WOS records for AjB lit review on influence of microbes plant phenology#
setwd("~/MicrobesAndPhenology/")
split_recs <- read.csv("saved records WOS friday sep 11 2020 - Split Records.csv", #sep="\t",#
					stringsAsFactors=F,na.strings = c("NA",""))
dim(split_recs)
head(split_recs)
split_recs_scr <- split_recs[!is.na(split_recs$direction.effect.split),]
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="MF"] ))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="bacteria"] ))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="otherfungi"] ))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="mixed"] ))
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$lifeform=="annual" | split_recs_scr$lifeform=="both"]))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$lifeform=="perennial"]))
numeric.phen.eff <- rep(NA, length=nrow(split_recs_scr))#
numeric.phen.eff[split_recs_scr$direction.effect.split=="earlier"] <- -1#
numeric.phen.eff[split_recs_scr$direction.effect.split=="delayed"] <- 1#
numeric.phen.eff[split_recs_scr$direction.effect.split=="none"] <- 0#
numeric.phen.eff[split_recs_scr$direction.effect.split=="expanded"] <- 1#
numeric.phen.eff[split_recs_scr$direction.effect.split=="narrowed"] <- -1#
split_recs_scr$numeric.phen.eff <- numeric.phen.eff
numeric.phen.eff <- rep(NA, length=nrow(split_recs_scr))#
numeric.phen.eff[split_recs_scr$direction.effect.split=="earlier"] <- -1#
numeric.phen.eff[split_recs_scr$direction.effect.split=="delayed"] <- 1#
numeric.phen.eff[split_recs_scr$direction.effect.split=="none"] <- 0#
numeric.phen.eff[split_recs_scr$direction.effect.split=="expanded"] <- 1#
numeric.phen.eff[split_recs_scr$direction.effect.split=="narrowed"] <- -1#
split_recs_scr$numeric.phen.eff <- numeric.phen.eff#
split_recs_scr$isEarlyOrNrw <- ifelse(numeric.phen.eff=="-1",1,0)#
split_recs_scr$notEarlyOrNrw <- 1-split_recs_scr$isEarlyOrNrw#
split_recs_scr$isDelayOrExp <- ifelse(numeric.phen.eff=="1",1,0)#
split_recs_scr$notDelayOrExp <- 1-split_recs_scr$isDelayOrExp#
split_recs_scr$isSig <- ifelse(numeric.phen.eff=="1" | numeric.phen.eff=="-1",1,0)#
split_recs_scr$notSig <- 1- split_recs_scr$isSig
split_recs_scr[which(split_recs_scr$micrtax =="virus"),]
split_recs_scr[which(split_recs_scr$micrtax =="virus"),]split_recs_scr$anyeffnum <- as.numeric(as.factor(split_recs_scr$anyeffect))-1#
sum(   tapply(split_recs_scr$anyeffnum[split_recs_scr$micrtax=="MF"],split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="MF"],sum) ==0)#4#
length(tapply(split_recs_scr$anyeffnum[split_recs_scr$micrtax=="MF"],split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="MF"],sum))#17  17-4 = 13#
sum(   tapply(split_recs_scr$anyeffnum[split_recs_scr$micrtax=="bacteria"],split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="bacteria"],sum) ==0)#0#
length(tapply(split_recs_scr$anyeffnum[split_recs_scr$micrtax=="bacteria"],split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="bacteria"],sum))#13#
table(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrloc=="multiple"])#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait=="fruiting time"]))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait=="senescence time"]))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait %in% c("phyllochron","budburst") ]))#
table(split_recs_scr$microbeNPHO)
as.numeric(as.factor(split_recs_scr$anyeffect))
split_recs <- read.csv("saved records WOS friday sep 11 2020 - Split Records.csv", #sep="\t",#
					stringsAsFactors=F,na.strings = c("NA","")) #
split_recs_scr <- split_recs[!is.na(split_recs$direction.effect.split),] #
	#several records were not possible to score for effect direction; but were relevant to microbial effects on phenology
#summary numbers for microbe taxonomy#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="MF"] ))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="bacteria"] ))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="otherfungi"] ))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="mixed"] ))#
#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$lifeform=="annual" | split_recs_scr$lifeform=="both"]))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$lifeform=="perennial"]))#
#
##split into binomial#
numeric.phen.eff <- rep(NA, length=nrow(split_recs_scr))#
numeric.phen.eff[split_recs_scr$direction.effect.split=="earlier"] <- -1#
numeric.phen.eff[split_recs_scr$direction.effect.split=="delayed"] <- 1#
numeric.phen.eff[split_recs_scr$direction.effect.split=="none"] <- 0#
numeric.phen.eff[split_recs_scr$direction.effect.split=="expanded"] <- 1#
numeric.phen.eff[split_recs_scr$direction.effect.split=="narrowed"] <- -1#
split_recs_scr$numeric.phen.eff <- numeric.phen.eff#
split_recs_scr$isEarlyOrNrw <- ifelse(numeric.phen.eff=="-1",1,0)#
split_recs_scr$notEarlyOrNrw <- 1-split_recs_scr$isEarlyOrNrw#
split_recs_scr$isDelayOrExp <- ifelse(numeric.phen.eff=="1",1,0)#
split_recs_scr$notDelayOrExp <- 1-split_recs_scr$isDelayOrExp#
split_recs_scr$isSig <- ifelse(numeric.phen.eff=="1" | numeric.phen.eff=="-1",1,0)#
split_recs_scr$notSig <- 1- split_recs_scr$isSig #
##numbers for text#
split_recs_scr$anyeffnum <- as.numeric(as.factor(split_recs_scr$anyeffect))-1
head(split_recs_scr$anyeffnum )
sum(   tapply(split_recs_scr$anyeffnum[split_recs_scr$micrtax=="MF"],split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="MF"],sum) ==0)#4#
length(tapply(split_recs_scr$anyeffnum[split_recs_scr$micrtax=="MF"],split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="MF"],sum))#17  17-4 = 13#
sum(   tapply(split_recs_scr$anyeffnum[split_recs_scr$micrtax=="bacteria"],split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="bacteria"],sum) ==0)#0#
length(tapply(split_recs_scr$anyeffnum[split_recs_scr$micrtax=="bacteria"],split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="bacteria"],sum))#13#
table(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrloc=="multiple"])#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait=="fruiting time"]))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait=="senescence time"]))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait %in% c("phyllochron","budburst") ]))#
table(split_recs_scr$microbeNPHO)
split_recs_scr$micrtaxmfa <- split_recs_scr$micrtax#
split_recs_scr$micrtaxmfa[split_recs_scr$micrtaxmfa=="MF"] <- "0MF"#
split_recs_scr$micrtaxmixa <- split_recs_scr$micrtax#
split_recs_scr$micrtaxmixa[split_recs_scr$micrtaxmixa=="mixed"] <- "0mix"#
##
split_recs_scr$strainvcommsa <- split_recs_scr$inoctype#
split_recs_scr$strainvcommsa[split_recs_scr$strainvcommsa=="strain"] <- "0strain"#
##
split_recs_scr$lifeformpa <- split_recs_scr$lifeform#
split_recs_scr$lifeformpa[split_recs_scr$lifeformpa == "perennial"] <- "0perennial"#
##
split_recs_scr$mphpa <- split_recs_scr$microbeNPHO#
split_recs_scr$mphpa[split_recs_scr$mphpa == "pathogen"] <- "0path"#
split_recs_scr$mphba <- split_recs_scr$microbeNPHO#
split_recs_scr$mphba[split_recs_scr$mphba == "other beneficial"] <- "0ob"#
##
split_recs_scr$micrlocseeda <- split_recs_scr$micrloc#
split_recs_scr$micrlocseeda[split_recs_scr$micrlocseeda=="seed"] <- "0seed"#
split_recs_scr$micrlocshoota <- split_recs_scr$micrloc#
split_recs_scr$micrlocshoota[split_recs_scr$micrlocshoota=="shoot"] <- "0shoot"#
##
split_recs_scr$phentraitfba <- split_recs_scr$phentrait#
split_recs_scr$phentraitfba[split_recs_scr$phentrait=="floral budset time"] <- "0fbt"#
split_recs_scr$phentraitfla <- split_recs_scr$phentrait#
split_recs_scr$phentraitfla[split_recs_scr$phentrait=="flowering time"] <- "0flwr"#
split_recs_scr$phentraitfra <- split_recs_scr$phentrait#
split_recs_scr$phentraitfra[split_recs_scr$phentrait=="fruiting time"] <- "0frt"#
split_recs_scr$phentraitga <- split_recs_scr$phentrait#
split_recs_scr$phentraitga[split_recs_scr$phentrait=="germination time"] <- "0gt"#
split_recs_scr$phentraitfda <- split_recs_scr$phentrait#
split_recs_scr$phentraitfda[split_recs_scr$phentrait=="flowering duration"] <- "0fd"
wosbin <- function(dataframe, woscolname,nrecs){#
	dataframe$dummyWOSrelrank <- dataframe[,woscolname]#
	dataframe$dummyWOSrelrank[dataframe$dummyWOSrelran%in%names(table(dataframe$WOS.relevance.rank)[table(dataframe$WOS.relevance.rank)<nrecs])] <- "binned"#
	return(dataframe)#
}#
#
flowering <- wosbin(split_recs_scr[split_recs_scr$phentrait=="flowering time",],"WOS.relevance.rank",13)#
	#ow sample, removing: seed = 6  *** LOW SAMPLE REMOVALS FOR TOTAL TESTS, NOTE THAT SOMETIMES THERE IS STILL ONLY ONE STUDY PER CATEGORY ***#
	flowerTAX    <- wosbin(split_recs_scr[split_recs_scr$phentrait=="flowering time" & split_recs_scr$micrtax !="virus",],"WOS.relevance.rank",13)#
	floweringLOC <- wosbin(split_recs_scr[split_recs_scr$phentrait=="flowering time" & split_recs_scr$micrloc != "seed",],"WOS.relevance.rank",13)#
	floweringMAT <- wosbin(split_recs_scr[split_recs_scr$phentrait=="flowering time" & split_recs_scr$mating != "unk" & split_recs_scr$mating != "s+o",],"WOS.relevance.rank",13)#
	#ow sample, removing: phytoH = 6#
	floweringMPH <- wosbin(split_recs_scr[split_recs_scr$phentrait=="flowering time" & !split_recs_scr$microbeNPHO%in%c( "unknown","phytohormones"),],"WOS.relevance.rank",13)
dim(flowering)
dim(flowerTAX)
dim(flowerLOC)
dim(floweringLOC)
table(flowering$micrtax)
table(flowering$micrloc)
table(flowering$mating)
table(floweringMAT$mating)
table(flowering$microbeNPHO)
table(flowering$inoctype)
table(flowering$lifeform)
table(germtime$lifeform)
germtime <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination time",],"WOS.relevance.rank",13)
table(germtime$lifeform)
table(germtime$micrtax)
nrow(floweringMAT)
nrow(floweringMPH)
table(germtime$micrloc)
table(germtime$mating)
table(germtime$lifeform)
table(germtime$inoctype)
table(germtime$microbeNPHO)
#0 records of MF on germination time#
	#low sample, removing: shoot = 4, #
	germtimeLOC <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination time" & split_recs_scr$micrloc != "shoot",],"WOS.relevance.rank",13)#
	germtimeMAT <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination time" & split_recs_scr$mating != "unk" & split_recs_scr$mating != "s+o",],"WOS.relevance.rank",13)#
	#low sample, removing: phytoH = 3 path = 5#
	germtimeMPH <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination time" & !split_recs_scr$microbeNPHO %in%c("unknown","pathogen","phytohormones"),],"WOS.relevance.rank",13)
germprb <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination prb",],"WOS.relevance.rank",13)
table(germprb$micrtax
)
table(germprb$micrloc)
table(germprb$micrNPHO)
table(germprb$microbeNPHO)
table(germprb$inoctype)
table(germprb$lifeform)
table(germprb$mating)
flowering <- wosbin(split_recs_scr[split_recs_scr$phentrait=="flowering time",],"WOS.relevance.rank",13)#
	## *** LOW SAMPLE REMOVALS FOR TOTAL TESTS, NOTE THAT SOMETIMES THERE IS STILL ONLY ONE STUDY PER CATEGORY ***#
	flowerTAX    <- wosbin(split_recs_scr[split_recs_scr$phentrait=="flowering time" & split_recs_scr$micrtax !="virus",],"WOS.relevance.rank",13)#
	#there are 0 records for seed microbe impacts on in flowering time#
	floweringMAT <- wosbin(split_recs_scr[split_recs_scr$phentrait=="flowering time" & split_recs_scr$mating != "unk" & split_recs_scr$mating != "s+o",],"WOS.relevance.rank",13)#
	#low sample, removing: phytoH = 6#
	floweringMPH <- wosbin(split_recs_scr[split_recs_scr$phentrait=="flowering time" & !split_recs_scr$microbeNPHO%in%c( "unknown","phytohormones"),],"WOS.relevance.rank",13)#
germtime <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination time",],"WOS.relevance.rank",13)#
	#0 records of MF on germination time#
	#low sample, removing: shoot = 4, #
	germtimeLOC <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination time" & split_recs_scr$micrloc != "shoot",],"WOS.relevance.rank",13)#
	germtimeMAT <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination time" & split_recs_scr$mating != "unk" & split_recs_scr$mating != "s+o",],"WOS.relevance.rank",13)#
	#low sample, removing: phytoH = 3 path = 5#
	germtimeMPH <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination time" & !split_recs_scr$microbeNPHO %in%c("unknown","pathogen","phytohormones"),],"WOS.relevance.rank",13)#
germprb <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination prb",],"WOS.relevance.rank",13)#
	#low sample, removing: MF, size = 1#
	germprbTAX <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination prb" & split_recs_scr$micrtax !="MF",],"WOS.relevance.rank",13)#
	germprbMAT <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination prb" & split_recs_scr$mating != "unk" & split_recs_scr$mating != "s+o",],"WOS.relevance.rank",13)#
	#low sample; removing: pathogen = 9#
	germprbMPH <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination prb" & !split_recs_scr$microbeNPHO%in% c("unknown","pathogen"),],"WOS.relevance.rank",13)#
	#low sample, removing: shoot = 4#
	germprbLOC <- wosbin(split_recs_scr[split_recs_scr$phentrait=="germination prb" & split_recs_scr$micrloc != "shoot",],"WOS.relevance.rank",13)#
#low sample traits, removing, mat time=4, senec time = 2, peak flower = 9, flower sen. time = 4; floral bud duration = 9#
allphen <- split_recs_scr[!is.na(split_recs_scr$phentrait) & (split_recs_scr$phentrait%in% c("budburst","floral budset time","flowering time","phyllochron","fruiting time","germination time")),]#
	allphen$dummyWOSrelrank <- allphen$WOS.relevance.rank#
	allphen$dummyWOSrelrank[allphen$dummyWOSrelran%in%names(table(allphen$WOS.relevance.rank)[table(allphen$WOS.relevance.rank)<13])] <- "binned"
flowering$anyeffnum <- as.numeric(as.factor(flowering$anyeffect))-1#
sum(tapply(flowering$anyeffnum,flowering$WOS.relevance.rank,sum) == 0) #6#
length(tapply(flowering$anyeffnum,flowering$WOS.relevance.rank,sum))#39#
germtime$anyeffnum <- as.numeric(as.factor(germtime$anyeffect))-1#
sum(tapply(germtime$anyeffnum,germtime$WOS.relevance.rank,sum) ==0)#1 -- note this record only appears in germtime, not germprb#
length(tapply(germtime$anyeffnum,germtime$WOS.relevance.rank,sum))#19#
germprb$anyeffnum <- as.numeric(as.factor(germprb$anyeffect))-1#
sum(tapply(germprb$anyeffnum,germprb$WOS.relevance.rank,sum) ==0)#0#
length(tapply(germprb$anyeffnum,germprb$WOS.relevance.rank,sum))#13#
length(unique(c(germprb$WOS.relevance.rank, germtime$WOS.relevance.rank)))#overlap
priornuup=list(R=list(V= 1, fix=1), G=list(G1=list(V=1, nu=8)))#
	#turning this degree of belief up to solve sampling issues for random effects when studies have few tests, or tests only in one category (in which case, this biases towards all the variance being due to the treatment, rather than study)#
	#estimates for intercept and random effects became more independent, because this shunts variation to be explained by fixed effect when there isn't information in the data for the random effect#
#after fitting the flowering model with various priors for the case with random effects(prior 2 onwards, the latter two of which are meant for no-intercept models); and various levels of binning,#
#
######BINOMIALS#
 traitdiffs <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~phentrait,random = ~dummyWOSrelrank,data=allphen,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=100000,thin=50,burnin=1000)
summary(traitdiffs)
traitdiffs2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~phentraitfba,random = ~dummyWOSrelrank,data=allphen,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=100000,thin=50,burnin=1000)#
	 traitdiffs3 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~phentraitfla,random = ~dummyWOSrelrank,data=allphen,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=100000,thin=50,burnin=1000)#
	 traitdiffs4 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~phentraitfra,random = ~dummyWOSrelrank,data=allphen,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=100000,thin=50,burnin=1000)#
	 traitdiffs5 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~phentraitga,random = ~dummyWOSrelrank,data=allphen,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=100000,thin=50,burnin=1000)#
 traitDdiffs <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~phentrait,random = ~dummyWOSrelrank,data=allphen,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=100000,thin=50,burnin=1000)#
	 traitDdiffs2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~phentraitfba,random = ~dummyWOSrelrank,data=allphen,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=100000,thin=50,burnin=1000)#
	 traitDdiffs3 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~phentraitfla,random = ~dummyWOSrelrank,data=allphen,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=100000,thin=50,burnin=1000)#
	 traitDdiffs4 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~phentraitfra,random = ~dummyWOSrelrank,data=allphen,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=100000,thin=50,burnin=1000)#
	 traitDdiffs5 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~phentraitga,random = ~dummyWOSrelrank,data=allphen,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=100000,thin=50,burnin=1000)
summary(traitdiffs2)
summary(traitdiffs3)
summary(traitdiffs4)
summary(traitdiffs5)
summary(traitDdiffs)
summary(traitDdiffs2)
summary(traitDdiffs3)
summary(traitDdiffs4)
summary(traitDdiffs5)
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait=="fruiting time"]))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait=="senescence time"]))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait %in% c("phyllochron","budburst") ]))
split_recs_scr[split_recs_scr$phentrait=="fruiting time",]
sum(   tapply(split_recs_scr$anyeffnum[split_recs_scr$phentrait=="fruiting time"],split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait=="fruiting time"],sum) ==0)#0
sum(   tapply(split_recs_scr$anyeffnum[split_recs_scr$phentrait=="senescence time"],split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait=="senescence time"],sum) ==0)#0
sum(   tapply(split_recs_scr$anyeffnum[split_recs_scr$micrtax=="MF"],split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="MF"],sum) ==0)#4#
length(tapply(split_recs_scr$anyeffnum[split_recs_scr$micrtax=="MF"],split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="MF"],sum))#17  17-4 = 13
sum(   tapply(split_recs_scr$anyeffnum[split_recs_scr$micrtax=="bacteria"],split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="bacteria"],sum) ==0)#0#
length(tapply(split_recs_scr$anyeffnum[split_recs_scr$micrtax=="bacteria"],split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="bacteria"],sum))#13
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait=="fruiting time"]))
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait=="senescence time"]))
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait %in% c("phyllochron","budburst") ]))
table(split_recs_scr$microbeNPHO)
sum(   tapply(split_recs_scr$anyeffnum[split_recs_scr$phentrait%in% c("phyllochron","budburst")],split_recs_scr$WOS.relevance.rank[split_recs_scr$phentrait %in% c("phyllochron","budburst") ],sum) ==0)#1
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="MF"] ))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="bacteria"] ))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="otherfungi"] ))#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="mixed"] ))
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="otherfungi"] ))#18#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="mixed"] ))#14
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="otherfungi"] ))#18#
length(unique(split_recs_scr$WOS.relevance.rank[split_recs_scr$micrtax=="mixed"] ))#14
flowerbitax <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrtax,random = ~dummyWOSrelrank,data=flowerTAX,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	flowerbitax2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrtaxmfa,random = ~dummyWOSrelrank,data=flowerTAX,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	flowerbitax3 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrtaxmixa,random = ~dummyWOSrelrank,data=flowerTAX,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
flowerbiscom <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~inoctype,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	flowerbiscom2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~strainvcommsa,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
flowerbimat <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~mating,random = ~dummyWOSrelrank,data=floweringMAT,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
flowerbilh <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~lifeform,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	flowerbilh2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~lifeformpa,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
flowerbimph <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~microbeNPHO,random = ~dummyWOSrelrank,data=floweringMPH,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	flowerbimph2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~mphba,random = ~dummyWOSrelrank,data=floweringMPH,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
flowerbiloc <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrloc,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	flowerbiloc2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrlocshoota,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
##
flowerDbitax <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrtax,random = ~dummyWOSrelrank,data=flowerTAX,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	flowerDbitax2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrtaxmfa,random = ~dummyWOSrelrank,data=flowerTAX,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	flowerDbitax3 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrtaxmixa,random = ~dummyWOSrelrank,data=flowerTAX,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
flowerDbiscom <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~inoctype,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	flowerDbiscom2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~strainvcommsa,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
flowerDbimat <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~mating,random = ~dummyWOSrelrank,data=floweringMAT,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
flowerDbilh <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~lifeform,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	flowerDbilh2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~lifeformpa,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
flowerDbimph <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~microbeNPHO,random = ~dummyWOSrelrank,data=floweringMPH, family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	flowerDbimph2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~mphba,random = ~dummyWOSrelrank,data=floweringMPH, family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
flowerDbiloc <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrloc,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	flowerDbiloc2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrlocshoota,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
#
germtimebitax <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrtax,random = ~dummyWOSrelrank,data=germtime,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germtimebitax2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrtaxmixa,random = ~dummyWOSrelrank,data=germtime,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germtimebiscom <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~inoctype,random = ~dummyWOSrelrank,data=germtime,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germtimebiscom2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~strainvcommsa,random = ~dummyWOSrelrank,data=germtime,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germtimebimat <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~mating,random = ~dummyWOSrelrank,data=germtimeMAT,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germtimebimph <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~microbeNPHO,random = ~dummyWOSrelrank,data=germtimeMPH,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germtimebilh <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~lifeform,random = ~dummyWOSrelrank,data=germtime,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germtimebilh2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~lifeformpa,random = ~dummyWOSrelrank,data=germtime,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germtimebiloc <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrloc,random = ~dummyWOSrelrank,data=germtimeLOC,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germtimebiloc2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrlocseeda,random = ~dummyWOSrelrank,data=germtimeLOC,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
##
germtimeDbitax <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrtax,random = ~dummyWOSrelrank,data=germtime,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germtimeDbitax2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrtaxmixa,random = ~dummyWOSrelrank,data=germtime,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germtimeDbiscom <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~inoctype,random = ~dummyWOSrelrank,data=germtime,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germtimeDbiscom2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~strainvcommsa,random = ~dummyWOSrelrank,data=germtime,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germtimeDbimat <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~mating,random = ~dummyWOSrelrank,data=germtimeMAT,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germtimeDbimph <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~microbeNPHO,random = ~dummyWOSrelrank,data=germtimeMPH,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germtimeDbilh <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~lifeform,random = ~dummyWOSrelrank,data=germtime,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germtimeDbilh2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~lifeformpa,random = ~dummyWOSrelrank,data=germtime,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germtimeDbiloc <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrloc,random = ~dummyWOSrelrank,data=germtimeLOC,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germtimeDbiloc2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrlocseeda,random = ~dummyWOSrelrank,data=germtimeLOC,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
#
germprbbitax <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrtax,random = ~dummyWOSrelrank,data=germprbTAX,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germprbbitax2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrtaxmixa,random = ~dummyWOSrelrank,data=germprbTAX,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germprbbiscom <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~inoctype,random = ~dummyWOSrelrank,data=germprb,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germprbbiscom2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~strainvcommsa,random = ~dummyWOSrelrank,data=germprb,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germprbbimat <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~mating,random = ~dummyWOSrelrank,data=germprbMAT,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germprbbimph <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~microbeNPHO,random = ~dummyWOSrelrank,data=germprbMPH,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germprbbimph2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~mphba,random = ~dummyWOSrelrank,data=germprbMPH,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germprbbilh <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~lifeform,random = ~dummyWOSrelrank,data=germprb,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germprbbilh2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~lifeformpa,random = ~dummyWOSrelrank,data=germprb,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germprbbiloc <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrloc,random = ~dummyWOSrelrank,data=germprbLOC,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germprbbiloc2 <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrlocseeda,random = ~dummyWOSrelrank,data=germprbLOC,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
##
germprbDbitax <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrtax,random = ~dummyWOSrelrank,data=germprbTAX,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germprbDbitax2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrtaxmixa,random = ~dummyWOSrelrank,data=germprbTAX,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germprbDbiscom <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~inoctype,random = ~dummyWOSrelrank,data=germprb,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germprbDbiscom <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~strainvcommsa,random = ~dummyWOSrelrank,data=germprb,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germprbDbimat <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~mating,random = ~dummyWOSrelrank,data=germprbMAT,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germprbDbimph <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~microbeNPHO,random = ~dummyWOSrelrank,data=germprbMPH,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germprbDbimph2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~mphba,random = ~dummyWOSrelrank,data=germprbMPH,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germprbDbilh <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~lifeform,random = ~dummyWOSrelrank,data=germprb,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germprbDbilh2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~lifeformpa,random = ~dummyWOSrelrank,data=germprb,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
germprbDbiloc <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrloc,random = ~dummyWOSrelrank,data=germprbLOC,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)#
	germprbDbiloc2 <- MCMCglmm(cbind(isDelayOrExp, notDelayOrExp)~micrlocseeda,random = ~dummyWOSrelrank,data=germprbLOC,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)
8*8*6
table(split_recs_scr$WOS.relevance.rank)
length(table(split_recs_scr$WOS.relevance.rank))
