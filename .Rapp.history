weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))
weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))
cols <- "mating2"
modslistE <- flowerbimat
modslistD <- flowerDbimat
typelist <- lapply(cols, function(x) sort(unique(dataframe[,x])))#
	wos <- sort(unique(dataframe$dummyWOSrelrank))#random effects in model are automatically sorted#
	xEmn <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  mean(dataframe$isEarlyOrNrw[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
ltrts <- lapply(typelist,length)
ltrts
v
typelist
dataframe <- floweringMAT
typelist <- lapply(cols, function(x) sort(unique(dataframe[,x])))#
	wos <- sort(unique(dataframe$dummyWOSrelrank))#random effects in model are automatically sorted#
	xEmn <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  mean(dataframe$isEarlyOrNrw[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
ltrts <- lapply(typelist,length)
typelist
ltrts
2:2
prdwrE <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  + mean(modslistE[[T]]$Sol[,x])+c(0,colMeans(modslistE[[T]]$Sol[,2:ltrts[[T]]])) )    )   )
apply(modslistE[[T]]$Sol[,2:ltrts[[T]]]),2,mean)
apply(modslistE[[T]]$Sol[,2:ltrts[[T]]],2,mean)
apply(modslistE[[T]]$Sol[,2:ltrts[[T]]],1,mean)
T
apply(modslistE[[1]]$Sol[,2:ltrts[[1]]],2,mean)
head(modslistE[[1]]$Sol)
summary(modslistE[[1]])
summary(modslistE)
modslistD <- list(flowerDbimat)
modslistE <- list(flowerbimat)
prdwrE <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  + mean(modslistE[[T]]$Sol[,x])+c(0,colMeans(modslistE[[T]]$Sol[,2:ltrts[[T]]])) )    )   )
typelist <- lapply(cols, function(x) sort(unique(dataframe[,x])))#
	wos <- sort(unique(dataframe$dummyWOSrelrank))#random effects in model are automatically sorted#
	xEmn <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  mean(dataframe$isEarlyOrNrw[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
ltrts <- lapply(typelist,length)#
prdwrE <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  + mean(modslistE[[T]]$Sol[,x])+c(0,colMeans(modslistE[[T]]$Sol[,2:ltrts[[T]]])) )    )   )
apply(modslistE[[1]]$Sol[,2:ltrts[[1]]],2,mean)
apply(modslistE[[1]]$Sol[,2:ltrts[[1]]],1,mean)
ltrts
weightmns <- function(dataframe, cols,modslistE,modslistD){#
	typelist <- lapply(cols, function(x) sort(unique(dataframe[,x])))#
	wos <- sort(unique(dataframe$dummyWOSrelrank))#random effects in model are automatically sorted#
	xEmn <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  mean(dataframe$isEarlyOrNrw[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
	ltrts <- lapply(typelist,length)#
	if(ltrts>2){#
		prdwrE <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  + mean(modslistE[[T]]$Sol[,x])+c(0,colMeans(modslistE[[T]]$Sol[,2:ltrts[[T]]])) )    )   )#
		pbaseE <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  +c(0,colMeans(modslistE[[T]]$Sol[,2:ltrts[[T]]])) )       )#
	} else { #assume at least two treatments!#
		prdwrE <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  + mean(modslistE[[T]]$Sol[,x])+c(0,mean(modslistE[[T]]$Sol[,2])) )    )   )#
		pbaseE <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  +c(0,mean(modslistE[[T]]$Sol[,2])) )       )#
	}#
	xE.m <- lapply(1:length(prdwrE), function(T)   rowMeans(t(xEmn[[T]]) - (prdwrE[[T]] - pbaseE[[T]]), na.rm=T) )#
	xEse <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  std.error(dataframe$isEarlyOrNrw[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
# 	xE.m <- unlist(lapply(1:length(xEmn), function(type) colMeans(xEmn[[type]],na.rm=T)))#
	if(ltrts>2){#
		prdwrD <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  + mean(modslistD[[T]]$Sol[,x])+c(0,colMeans(modslistD[[T]]$Sol[,2:ltrts[[T]]])) )    )   )#
		pbaseD <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  +c(0,colMeans(modslistD[[T]]$Sol[,2:ltrts[[T]]])) )       )#
	} else { #assume at least two treatments!#
		prdwrD <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  + mean(modslistD[[T]]$Sol[,x])+c(0,mean(modslistD[[T]]$Sol[,2])) )    )   )#
		pbaseD <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  +c(0,mean(modslistD[[T]]$Sol[,2])) )       )#
	}#
 	xDmn <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  mean(dataframe$isDelayOrExp[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
	xD.m <- lapply(1:length(prdwrD), function(T)   rowMeans(t(xDmn[[T]]) - (prdwrD[[T]] - pbaseD[[T]]), na.rm=T) )#
	xE.se <-unlist(lapply(1:length(xEse), function(type)  sapply(1:ncol(xEse[[type]]), function(m) mean(xEse[[type]][,m],na.rm=T))))#
	xDse <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  std.error(dataframe$isDelayOrExp[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
# 	xD.m <- unlist(lapply(1:length(xDmn), function(type) colMeans(xDmn[[type]],na.rm=T)))#
	xD.se <-unlist(lapply(1:length(xDse), function(type)  sapply(1:ncol(xDse[[type]]), function(m) mean(xDse[[type]][,m],na.rm=T))))#
	return(list(xE.m,xE.se,xD.m,xD.se))#
}#
cols1 <- c("micrtax.sim2","Strainvcomm.1","lifeform2","micrloc3")#
modsFE <- list(flowerbitax,flowerbiscom,flowerbilh,flowerbiloc)#
modsFD <- list(flowerDbitax,flowerDbiscom,flowerDbilh,flowerDbiloc)#
flwrE.m <-   c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[1]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[1]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[1]])
flwrE.se <-   c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[2]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[2]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[2]])
flwrE.m
#we have not (and cannot with this data) estimate effects of studies on the variance in the data, thus there is no adjustment to the SE#
weightmns <- function(dataframe, cols,modslistE,modslistD){#
	typelist <- lapply(cols, function(x) sort(unique(dataframe[,x])))#
	wos <- sort(unique(dataframe$dummyWOSrelrank))#random effects in model are automatically sorted#
	xEmn <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  mean(dataframe$isEarlyOrNrw[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
	ltrts <- lapply(typelist,length)#
	if(ltrts>2){  #bad code , but works because the only time I use this function when ltrts is less than two, there's only one model, so it is first.#
		prdwrE <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  + mean(modslistE[[T]]$Sol[,x])+c(0,colMeans(modslistE[[T]]$Sol[,2:ltrts[[T]]])) )    )   )#
		pbaseE <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  +c(0,colMeans(modslistE[[T]]$Sol[,2:ltrts[[T]]])) )       )#
	} else { #assume at least two treatments!#
		prdwrE <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  + mean(modslistE[[T]]$Sol[,x])+c(0,mean(modslistE[[T]]$Sol[,2])) )    )   )#
		pbaseE <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  +c(0,mean(modslistE[[T]]$Sol[,2])) )       )#
	}#
	xE.m <- lapply(1:length(prdwrE), function(T)   rowMeans(t(xEmn[[T]]) - (prdwrE[[T]] - pbaseE[[T]]), na.rm=T) )#
	xEse <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  std.error(dataframe$isEarlyOrNrw[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
# 	xE.m <- unlist(lapply(1:length(xEmn), function(type) colMeans(xEmn[[type]],na.rm=T)))#
	if(ltrts>2){#
		prdwrD <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  + mean(modslistD[[T]]$Sol[,x])+c(0,colMeans(modslistD[[T]]$Sol[,2:ltrts[[T]]])) )    )   )#
		pbaseD <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  +c(0,colMeans(modslistD[[T]]$Sol[,2:ltrts[[T]]])) )       )#
	} else { #assume at least two treatments!#
		prdwrD <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  + mean(modslistD[[T]]$Sol[,x])+c(0,mean(modslistD[[T]]$Sol[,2])) )    )   )#
		pbaseD <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  +c(0,mean(modslistD[[T]]$Sol[,2])) )       )#
	}#
 	xDmn <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  mean(dataframe$isDelayOrExp[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
	xD.m <- lapply(1:length(prdwrD), function(T)   rowMeans(t(xDmn[[T]]) - (prdwrD[[T]] - pbaseD[[T]]), na.rm=T) )#
	xE.se <-unlist(lapply(1:length(xEse), function(type)  sapply(1:ncol(xEse[[type]]), function(m) mean(xEse[[type]][,m],na.rm=T))))#
	xDse <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  std.error(dataframe$isDelayOrExp[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
# 	xD.m <- unlist(lapply(1:length(xDmn), function(type) colMeans(xDmn[[type]],na.rm=T)))#
	xD.se <-unlist(lapply(1:length(xDse), function(type)  sapply(1:ncol(xDse[[type]]), function(m) mean(xDse[[type]][,m],na.rm=T))))#
	return(list(unlist(xE.m),xE.se,unlist(xD.m),xD.se))#
}
weightmns <- function(dataframe, cols,modslistE,modslistD){#
	typelist <- lapply(cols, function(x) sort(unique(dataframe[,x])))#
	wos <- sort(unique(dataframe$dummyWOSrelrank))#random effects in model are automatically sorted#
	xEmn <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  mean(dataframe$isEarlyOrNrw[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
	ltrts <- lapply(typelist,length)#
	if(ltrts>2){#
		prdwrE <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  + mean(modslistE[[T]]$Sol[,x])+c(0,colMeans(modslistE[[T]]$Sol[,2:ltrts[[T]]])) )    )   )#
		pbaseE <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  +c(0,colMeans(modslistE[[T]]$Sol[,2:ltrts[[T]]])) )       )#
	} else { #assume at least two treatments!#
		prdwrE <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  + mean(modslistE[[T]]$Sol[,x])+c(0,mean(modslistE[[T]]$Sol[,2])) )    )   )#
		pbaseE <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  +c(0,mean(modslistE[[T]]$Sol[,2])) )       )#
	}#
	xE.m <- lapply(1:length(prdwrE), function(T)   rowMeans(t(xEmn[[T]]) - (prdwrE[[T]] - pbaseE[[T]]), na.rm=T) )#
	xEse <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  std.error(dataframe$isEarlyOrNrw[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
# 	xE.m <- unlist(lapply(1:length(xEmn), function(type) colMeans(xEmn[[type]],na.rm=T)))#
	if(ltrts>2){#
		prdwrD <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  + mean(modslistD[[T]]$Sol[,x])+c(0,colMeans(modslistD[[T]]$Sol[,2:ltrts[[T]]])) )    )   )#
		pbaseD <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  +c(0,colMeans(modslistD[[T]]$Sol[,2:ltrts[[T]]])) )       )#
	} else { #assume at least two treatments!#
		prdwrD <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  + mean(modslistD[[T]]$Sol[,x])+c(0,mean(modslistD[[T]]$Sol[,2])) )    )   )#
		pbaseD <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  +c(0,mean(modslistD[[T]]$Sol[,2])) )       )#
	}#
 	xDmn <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  mean(dataframe$isDelayOrExp[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
	xD.m <- lapply(1:length(prdwrD), function(T)   rowMeans(t(xDmn[[T]]) - (prdwrD[[T]] - pbaseD[[T]]), na.rm=T) )#
	xE.se <-unlist(lapply(1:length(xEse), function(type)  sapply(1:ncol(xEse[[type]]), function(m) mean(xEse[[type]][,m],na.rm=T))))#
	xDse <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  std.error(dataframe$isDelayOrExp[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
# 	xD.m <- unlist(lapply(1:length(xDmn), function(type) colMeans(xDmn[[type]],na.rm=T)))#
	xD.se <-unlist(lapply(1:length(xDse), function(type)  sapply(1:ncol(xDse[[type]]), function(m) mean(xDse[[type]][,m],na.rm=T))))#
	return(list(xE.m,xE.se,xD.m,xD.se))#
}#
cols1 <- c("micrtax.sim2","Strainvcomm.1","lifeform2","micrloc3")#
modsFE <- list(flowerbitax,flowerbiscom,flowerbilh,flowerbiloc)#
modsFD <- list(flowerDbitax,flowerDbiscom,flowerDbilh,flowerDbiloc)#
flwrE.m <-   c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[1]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[1]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[1]])
flwrE.m
xE.m
unlist(xE.m)
weightmns <- function(dataframe, cols,modslistE,modslistD){#
	typelist <- lapply(cols, function(x) sort(unique(dataframe[,x])))#
	wos <- sort(unique(dataframe$dummyWOSrelrank))#random effects in model are automatically sorted#
	xEmn <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  mean(dataframe$isEarlyOrNrw[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
	ltrts <- lapply(typelist,length)#
	if(ltrts>2){  #bad code , but works because the only time I use this function when ltrts is less than two, there's only one model, so it is first.#
		prdwrE <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  + mean(modslistE[[T]]$Sol[,x])+c(0,colMeans(modslistE[[T]]$Sol[,2:ltrts[[T]]])) )    )   )#
		pbaseE <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  +c(0,colMeans(modslistE[[T]]$Sol[,2:ltrts[[T]]])) )       )#
	} else { #assume at least two treatments!#
		prdwrE <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  + mean(modslistE[[T]]$Sol[,x])+c(0,mean(modslistE[[T]]$Sol[,2])) )    )   )#
		pbaseE <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistE[[T]]$Sol[,1])  +c(0,mean(modslistE[[T]]$Sol[,2])) )       )#
	}#
	xE.m <- unlist( lapply(1:length(prdwrE), function(T)   rowMeans(t(xEmn[[T]]) - (prdwrE[[T]] - pbaseE[[T]]), na.rm=T) ) )#
	xEse <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  std.error(dataframe$isEarlyOrNrw[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
	xE.se <-unlist(lapply(1:length(xEse), function(type)  sapply(1:ncol(xEse[[type]]), function(m) mean(xEse[[type]][,m],na.rm=T))))#
# 	xE.m <- unlist(lapply(1:length(xEmn), function(type) colMeans(xEmn[[type]],na.rm=T)))#
	if(ltrts>2){#
		prdwrD <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  + mean(modslistD[[T]]$Sol[,x])+c(0,colMeans(modslistD[[T]]$Sol[,2:ltrts[[T]]])) )    )   )#
		pbaseD <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  +c(0,colMeans(modslistD[[T]]$Sol[,2:ltrts[[T]]])) )       )#
	} else { #assume at least two treatments!#
		prdwrD <-lapply(1:length(typelist), function(T) sapply( (ltrts[[T]]+1):(ltrts[[T]]+length(wos)), function(x) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  + mean(modslistD[[T]]$Sol[,x])+c(0,mean(modslistD[[T]]$Sol[,2])) )    )   )#
		pbaseD <-lapply(1:length(typelist), function(T) #
				invlogistic(mean(modslistD[[T]]$Sol[,1])  +c(0,mean(modslistD[[T]]$Sol[,2])) )       )#
	}#
 	xDmn <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  mean(dataframe$isDelayOrExp[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
	xD.m <- unlist( lapply(1:length(prdwrD), function(T)   rowMeans(t(xDmn[[T]]) - (prdwrD[[T]] - pbaseD[[T]]), na.rm=T) ) )#
	xDse <- lapply(1:length(typelist), function(type) sapply(typelist[[type]], function(m)  sapply(wos, function(w)  std.error(dataframe$isDelayOrExp[dataframe$dummyWOSrelrank==w & dataframe[,which(colnames(dataframe)==cols[type])]==m] )   )))#
# 	xD.m <- unlist(lapply(1:length(xDmn), function(type) colMeans(xDmn[[type]],na.rm=T)))#
	xD.se <-unlist(lapply(1:length(xDse), function(type)  sapply(1:ncol(xDse[[type]]), function(m) mean(xDse[[type]][,m],na.rm=T))))#
	return(list(xE.m,xE.se,xD.m,xD.se))#
}#
cols1 <- c("micrtax.sim2","Strainvcomm.1","lifeform2","micrloc3")#
modsFE <- list(flowerbitax,flowerbiscom,flowerbilh,flowerbiloc)#
modsFD <- list(flowerDbitax,flowerDbiscom,flowerDbilh,flowerDbiloc)#
flwrE.m <-   c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[1]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[1]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[1]])#
flwrE.se <-   c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[2]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[2]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[2]])
flwrE.m
flwrE.m <-  c(flwrE.m, mean(flowering$isEarlyOrNrw))#
	flwrE.se <-  c(flwrE.se, std.error(flowering$isEarlyOrNrw))
xvals <- c(seq(from=0,to=1,length.out=c(4+3+3+5+4+2+1) ))#
xlab <- c("bacteria","myc fungi","mixed","other fungi","community","strain","strain mix","annual","both","perennial","root","seed","shoot","v. w/ reprod","v. w/o reprod","nutrients","other beneficial","pathogen","phytohormones","outcrosser","selfer","All")#
par(mfrow=c(3,1))#
par(mar=c(1,0,1,0))#
par(oma=c(5,4,1,1))####NOTE THAT SOME OF THESE ARE ONLY SIG AT 0.9#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.2,1.2),yaxt="n")#
	points(unlist(flwrE.m)~xvals,pch=16)#
	points(unlist(flwrD.m)~I(xvals+0.01),pch=16,col="gray")#
	arrows(x0=xvals , y0=flwrE.m -flwrE.se, y1 = flwrE.m +flwrE.se,length=0     )#
	arrows(x0=xvals+0.01 , y0=flwrD.m -flwrD.se, y1 = flwrD.m +flwrD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsFE)#
	text(xvals,y=-0.2,siggroupsFD,col="gray")#
	mtext(side=3,"flowering time")#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Earlier","Delay"),fill=c("black","gray"),bty="n")
flwrD.m <-   c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[3]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[3]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[3]])#
flwrD.se <-  c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[4]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[4]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[4]])
flwrE.m <-  c(flwrE.m, mean(flowering$isEarlyOrNrw))#
	flwrE.se <-  c(flwrE.se, std.error(flowering$isEarlyOrNrw))
flwrE.m <-   c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[1]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[1]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[1]])#
flwrE.se <-  c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[2]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[2]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[2]])#
flwrD.m <-   c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[3]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[3]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[3]])#
flwrD.se <-  c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[4]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[4]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[4]])
flwrE.m <-  c(flwrE.m, mean(flowering$isEarlyOrNrw))#
	flwrE.se <-  c(flwrE.se, std.error(flowering$isEarlyOrNrw))
flwrD.m <-  c(flwrD.m, mean(flowering$isDelayOrExp))#
	flwrD.se <-  c(flwrD.se, std.error(flowering$isDelayOrExp))
xvals <- c(seq(from=0,to=1,length.out=c(4+3+3+5+4+2+1) ))#
xlab <- c("bacteria","myc fungi","mixed","other fungi","community","strain","strain mix","annual","both","perennial","root","seed","shoot","v. w/ reprod","v. w/o reprod","nutrients","other beneficial","pathogen","phytohormones","outcrosser","selfer","All")#
par(mfrow=c(3,1))#
par(mar=c(1,0,1,0))#
par(oma=c(5,4,1,1))####NOTE THAT SOME OF THESE ARE ONLY SIG AT 0.9#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.2,1.2),yaxt="n")#
	points(unlist(flwrE.m)~xvals,pch=16)#
	points(unlist(flwrD.m)~I(xvals+0.01),pch=16,col="gray")#
	arrows(x0=xvals , y0=flwrE.m -flwrE.se, y1 = flwrE.m +flwrE.se,length=0     )#
	arrows(x0=xvals+0.01 , y0=flwrD.m -flwrD.se, y1 = flwrD.m +flwrD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsFE)#
	text(xvals,y=-0.2,siggroupsFD,col="gray")#
	mtext(side=3,"flowering time")#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Earlier","Delay"),fill=c("black","gray"),bty="n")
modsGTE <- list(germtimebitax,germtimebiscom,germtimebilh,germtimebiloc)#
modsGTD <- list(germtimeDbitax,germtimeDbiscom,germtimeDbilh,germtimeDbiloc)#
germTE.m <-   c(weightmns(germtime,cols=cols1,modsGTE,modsGTD)[[1]],weightmns(germtimeMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[1]],weightmns(germtimeMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[1]])#
germTE.se <-  c(weightmns(germtime,cols=cols1,modsGTE,modsGTD)[[2]],weightmns(germtimeMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[2]],weightmns(germtimeMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[2]])#
germTD.m <-   c(weightmns(germtime,cols=cols1,modsGTE,modsGTD)[[3]],weightmns(germtimeMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[3]],weightmns(germtimeMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[3]])#
germTD.se <-  c(weightmns(germtime,cols=cols1,modsGTE,modsGTD)[[4]],weightmns(germtimeMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[4]],weightmns(germtimeMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[4]])
modsGPE <- list(germprbbitax,germprbbiscom,germprbbilh,germprbbiloc)#
modsGPD <- list(germprbDbitax,germprbDbiscom,germprbDbilh,germprbDbiloc)#
germTE.m <-   c(weightmns(germprb,cols=cols1,modsGPE,modsGPD)[[1]],weightmns(germprbMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[1]],weightmns(germprbMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[1]])#
germTE.se <-  c(weightmns(germprb,cols=cols1,modsGPE,modsGPD)[[2]],weightmns(germprbMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[2]],weightmns(germprbMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[2]])#
germTD.m <-   c(weightmns(germprb,cols=cols1,modsGPE,modsGPD)[[3]],weightmns(germprbMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[3]],weightmns(germprbMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[3]])#
germTD.se <-  c(weightmns(germprb,cols=cols1,modsGPE,modsGPD)[[4]],weightmns(germprbMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[4]],weightmns(germprbMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[4]])#
#
	flwrE.m <-  c(flwrE.m, mean(flowering$isEarlyOrNrw))#
	flwrE.se <-  c(flwrE.se, std.error(flowering$isEarlyOrNrw))#
	germTE.m <-  c(germTE.m, mean(germtime$isEarlyOrNrw))#
	germTE.se <-  c(germTE.se, std.error(germtime$isEarlyOrNrw))#
	germPE.m <-  c(germPE.m, mean(germprb$isEarlyOrNrw))#
	germPE.se <-  c(germPE.se, std.error(germprb$isEarlyOrNrw))#
	flwrD.m <-  c(flwrD.m, mean(flowering$isDelayOrExp))#
	flwrD.se <-  c(flwrD.se, std.error(flowering$isDelayOrExp))#
	germTD.m <-  c(germTD.m, mean(germtime$isDelayOrExp))#
	germTD.se <-  c(germTD.se, std.error(germtime$isDelayOrExp))#
	germPD.m <-  c(germPD.m, mean(germprb$isDelayOrExp))#
	germPD.se <-  c(germPD.se, std.error(germprb$isDelayOrExp))
modsGTE <- list(germtimebitax,germtimebiscom,germtimebilh,germtimebiloc)#
modsGTD <- list(germtimeDbitax,germtimeDbiscom,germtimeDbilh,germtimeDbiloc)#
germTE.m <-   c(weightmns(germtime,cols=cols1,modsGTE,modsGTD)[[1]],weightmns(germtimeMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[1]],weightmns(germtimeMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[1]])#
germTE.se <-  c(weightmns(germtime,cols=cols1,modsGTE,modsGTD)[[2]],weightmns(germtimeMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[2]],weightmns(germtimeMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[2]])#
germTD.m <-   c(weightmns(germtime,cols=cols1,modsGTE,modsGTD)[[3]],weightmns(germtimeMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[3]],weightmns(germtimeMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[3]])#
germTD.se <-  c(weightmns(germtime,cols=cols1,modsGTE,modsGTD)[[4]],weightmns(germtimeMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[4]],weightmns(germtimeMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[4]])#
modsGPE <- list(germprbbitax,germprbbiscom,germprbbilh,germprbbiloc)#
modsGPD <- list(germprbDbitax,germprbDbiscom,germprbDbilh,germprbDbiloc)#
germPE.m <-   c(weightmns(germprb,cols=cols1,modsGPE,modsGPD)[[1]],weightmns(germprbMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[1]],weightmns(germprbMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[1]])#
germPE.se <-  c(weightmns(germprb,cols=cols1,modsGPE,modsGPD)[[2]],weightmns(germprbMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[2]],weightmns(germprbMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[2]])#
germPD.m <-   c(weightmns(germprb,cols=cols1,modsGPE,modsGPD)[[3]],weightmns(germprbMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[3]],weightmns(germprbMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[3]])#
germPD.se <-  c(weightmns(germprb,cols=cols1,modsGPE,modsGPD)[[4]],weightmns(germprbMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[4]],weightmns(germprbMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[4]])#
#
	flwrE.m <-  c(flwrE.m, mean(flowering$isEarlyOrNrw))#
	flwrE.se <-  c(flwrE.se, std.error(flowering$isEarlyOrNrw))#
	germTE.m <-  c(germTE.m, mean(germtime$isEarlyOrNrw))#
	germTE.se <-  c(germTE.se, std.error(germtime$isEarlyOrNrw))#
	germPE.m <-  c(germPE.m, mean(germprb$isEarlyOrNrw))#
	germPE.se <-  c(germPE.se, std.error(germprb$isEarlyOrNrw))#
	flwrD.m <-  c(flwrD.m, mean(flowering$isDelayOrExp))#
	flwrD.se <-  c(flwrD.se, std.error(flowering$isDelayOrExp))#
	germTD.m <-  c(germTD.m, mean(germtime$isDelayOrExp))#
	germTD.se <-  c(germTD.se, std.error(germtime$isDelayOrExp))#
	germPD.m <-  c(germPD.m, mean(germprb$isDelayOrExp))#
	germPD.se <-  c(germPD.se, std.error(germprb$isDelayOrExp))
xvals <- c(seq(from=0,to=1,length.out=c(4+3+3+5+4+2+1) ))#
xlab <- c("bacteria","myc fungi","mixed","other fungi","community","strain","strain mix","annual","both","perennial","root","seed","shoot","v. w/ reprod","v. w/o reprod","nutrients","other beneficial","pathogen","phytohormones","outcrosser","selfer","All")#
par(mfrow=c(3,1))#
par(mar=c(1,0,1,0))#
par(oma=c(5,4,1,1))####NOTE THAT SOME OF THESE ARE ONLY SIG AT 0.9#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.2,1.2),yaxt="n")#
	points(unlist(flwrE.m)~xvals,pch=16)#
	points(unlist(flwrD.m)~I(xvals+0.01),pch=16,col="gray")#
	arrows(x0=xvals , y0=flwrE.m -flwrE.se, y1 = flwrE.m +flwrE.se,length=0     )#
	arrows(x0=xvals+0.01 , y0=flwrD.m -flwrD.se, y1 = flwrD.m +flwrD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsFE)#
	text(xvals,y=-0.2,siggroupsFD,col="gray")#
	mtext(side=3,"flowering time")#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Earlier","Delay"),fill=c("black","gray"),bty="n")#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.2,1.2),yaxt="n")#
	points(unlist(germTE.m)~xvals,pch=16)#
	points(unlist(germTD.m)~I(xvals+0.01),pch=16,col="gray")#
	arrows(x0=xvals , y0=germTE.m -germTE.se, y1 = germTE.m +germTE.se,length=0     )#
	arrows(x0=xvals+0.01 , y0=germTD.m -germTD.se, y1 = germTD.m +germTD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsGtE)#
	text(xvals,y=-0.2,siggroupsGtD,col="gray")#
	mtext(side=3,"germination time")#
	mtext(side=2,"Prb of observing Effect",line=2)#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Earlier","Delay"),fill=c("black","gray"),bty="n")#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.2,1.2),yaxt="n")#
	points(unlist(germPE.m)~xvals[-19],pch=16)#
	points(unlist(germPD.m)~I(xvals[-19]+0.01),pch=16,col="gray")#
	arrows(x0=xvals[-19] , y0=germPE.m -germPE.se, y1 = germPE.m +germPE.se,length=0     )#
	arrows(x0=xvals[-19]+0.01 , y0=germPD.m -germPD.se, y1 = germPD.m +germPD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsGpE)#
	text(xvals,y=-0.2,siggroupsGpD,col="gray")#
	mtext(side=3,"germination probability")#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Narrowed","Expanded"),fill=c("black","gray"),bty="n")#
axis(side=1,at=xvals, labels=xlab,las=2)
cols1 <- c("micrtax.sim2","Strainvcomm.1","lifeform2","micrloc3")#
modsFE <- list(flowerbitax,flowerbiscom,flowerbilh,flowerbiloc)#
modsFD <- list(flowerDbitax,flowerDbiscom,flowerDbilh,flowerDbiloc)#
flwrE.m <-   c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[1]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[1]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[1]])#
flwrE.se <-  c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[2]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[2]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[2]])#
flwrD.m <-   c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[3]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[3]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[3]])#
flwrD.se <-  c(weightmns(flowering,cols=cols1,modsFE,modsFD)[[4]],weightmns(floweringMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[4]],weightmns(floweringMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[4]])#
modsGTE <- list(germtimebitax,germtimebiscom,germtimebilh,germtimebiloc)#
modsGTD <- list(germtimeDbitax,germtimeDbiscom,germtimeDbilh,germtimeDbiloc)#
germTE.m <-   c(weightmns(germtime,cols=cols1,modsGTE,modsGTD)[[1]],weightmns(germtimeMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[1]],weightmns(germtimeMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[1]])#
germTE.se <-  c(weightmns(germtime,cols=cols1,modsGTE,modsGTD)[[2]],weightmns(germtimeMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[2]],weightmns(germtimeMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[2]])#
germTD.m <-   c(weightmns(germtime,cols=cols1,modsGTE,modsGTD)[[3]],weightmns(germtimeMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[3]],weightmns(germtimeMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[3]])#
germTD.se <-  c(weightmns(germtime,cols=cols1,modsGTE,modsGTD)[[4]],weightmns(germtimeMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[4]],weightmns(germtimeMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[4]])#
modsGPE <- list(germprbbitax,germprbbiscom,germprbbilh,germprbbiloc)#
modsGPD <- list(germprbDbitax,germprbDbiscom,germprbDbilh,germprbDbiloc)#
germPE.m <-   c(weightmns(germprb,cols=cols1,modsGPE,modsGPD)[[1]],weightmns(germprbMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[1]],weightmns(germprbMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[1]])#
germPE.se <-  c(weightmns(germprb,cols=cols1,modsGPE,modsGPD)[[2]],weightmns(germprbMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[2]],weightmns(germprbMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[2]])#
germPD.m <-   c(weightmns(germprb,cols=cols1,modsGPE,modsGPD)[[3]],weightmns(germprbMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[3]],weightmns(germprbMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[3]])#
germPD.se <-  c(weightmns(germprb,cols=cols1,modsGPE,modsGPD)[[4]],weightmns(germprbMPH,cols=c("MicrobeMPH"),list(flowerbimph),list(flowerDbimph))[[4]],weightmns(germprbMAT,cols=c("mating2"),list(flowerbimat),list(flowerDbimat))[[4]])#
#
	flwrE.m <-  c(flwrE.m, mean(flowering$isEarlyOrNrw))#
	flwrE.se <-  c(flwrE.se, std.error(flowering$isEarlyOrNrw))#
	germTE.m <-  c(germTE.m, mean(germtime$isEarlyOrNrw))#
	germTE.se <-  c(germTE.se, std.error(germtime$isEarlyOrNrw))#
	germPE.m <-  c(germPE.m, mean(germprb$isEarlyOrNrw))#
	germPE.se <-  c(germPE.se, std.error(germprb$isEarlyOrNrw))#
	flwrD.m <-  c(flwrD.m, mean(flowering$isDelayOrExp))#
	flwrD.se <-  c(flwrD.se, std.error(flowering$isDelayOrExp))#
	germTD.m <-  c(germTD.m, mean(germtime$isDelayOrExp))#
	germTD.se <-  c(germTD.se, std.error(germtime$isDelayOrExp))#
	germPD.m <-  c(germPD.m, mean(germprb$isDelayOrExp))#
	germPD.se <-  c(germPD.se, std.error(germprb$isDelayOrExp))#
#
#fill in from model results#
siggroupsFE <- c( "a","a","ab","b",#tax#
				"","","",#scom#
				" "," "," ",#lh  if 0.9: "a","ab","b"#
				"a","b","b","a","a", #loc#
				"a","b","ab","ab", #mph#
				"","", ""	) #mat#
siggroupsFD <- c("b","b","a","ab",#tax#
				"a","b","b",#scom;  looks backwards!#
				"","","",#lh#
				"a","b","a","a","a", #loc#
				"a","a","a","b", #mph#
				"","", ""	) #mat#
siggroupsGtE <- c( "b","a","c","b",#tax  #
				"","","",#scom#
				"b","ab","a",#lh#
				"","","","","", #loc#
				"c","b","bc","a", #mph#
				"","", ""	) #mat#
siggroupsGtD <- c( "b","c","a","a",#tax#
				"a","b","ab",#scom # at 0.9, strain mix is b only, recall is comm, strain, strain mix#
				"","","",#lh#
				"a","a","b","a","b",#loc  vnir and shoot are diff at .9#
				"bc","b","a","c", #mph#
				"","", ""	) #mat#
siggroupsGpE <- c( "b","c","a","a",#tax#
				"a","b","a",#
				"","","",#lh#
				"a","a","b","a","a", #loc#
				"b","b","a","", #mph ****no phytohormone records***#
				"","", ""	) #mat#
siggroupsGpD <- c( "b","a","bc","c",#tax#
				"b","b","a",#scom ; recall is comm, strain, strain mix#
				"ab","b","a",#lh#
				"a","a","b","a","a", #loc#
				"b","a","b","", #mph  ****no phytohormone records***#
				"b","a", ""	) #mat & bonus; mat looks backwards
xvals <- c(seq(from=0,to=1,length.out=c(4+3+3+5+4+2+1) ))#
xlab <- c("bacteria","myc fungi","mixed","other fungi","community","strain","strain mix","annual","both","perennial","root","seed","shoot","v. w/ reprod","v. w/o reprod","nutrients","other beneficial","pathogen","phytohormones","outcrosser","selfer","All")#
par(mfrow=c(3,1))#
par(mar=c(1,0,1,0))#
par(oma=c(5,4,1,1))####NOTE THAT SOME OF THESE ARE ONLY SIG AT 0.9#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.2,1.2),yaxt="n")#
	points(unlist(flwrE.m)~xvals,pch=16)#
	points(unlist(flwrD.m)~I(xvals+0.01),pch=16,col="gray")#
	arrows(x0=xvals , y0=flwrE.m -flwrE.se, y1 = flwrE.m +flwrE.se,length=0     )#
	arrows(x0=xvals+0.01 , y0=flwrD.m -flwrD.se, y1 = flwrD.m +flwrD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsFE)#
	text(xvals,y=-0.2,siggroupsFD,col="gray")#
	mtext(side=3,"flowering time")#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Earlier","Delay"),fill=c("black","gray"),bty="n")#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.2,1.2),yaxt="n")#
	points(unlist(germTE.m)~xvals,pch=16)#
	points(unlist(germTD.m)~I(xvals+0.01),pch=16,col="gray")#
	arrows(x0=xvals , y0=germTE.m -germTE.se, y1 = germTE.m +germTE.se,length=0     )#
	arrows(x0=xvals+0.01 , y0=germTD.m -germTD.se, y1 = germTD.m +germTD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsGtE)#
	text(xvals,y=-0.2,siggroupsGtD,col="gray")#
	mtext(side=3,"germination time")#
	mtext(side=2,"Prb of observing Effect",line=2)#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Earlier","Delay"),fill=c("black","gray"),bty="n")#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.2,1.2),yaxt="n")#
	points(unlist(germPE.m)~xvals[-19],pch=16)#
	points(unlist(germPD.m)~I(xvals[-19]+0.01),pch=16,col="gray")#
	arrows(x0=xvals[-19] , y0=germPE.m -germPE.se, y1 = germPE.m +germPE.se,length=0     )#
	arrows(x0=xvals[-19]+0.01 , y0=germPD.m -germPD.se, y1 = germPD.m +germPD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsGpE)#
	text(xvals,y=-0.2,siggroupsGpD,col="gray")#
	mtext(side=3,"germination probability")#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Narrowed","Expanded"),fill=c("black","gray"),bty="n")#
axis(side=1,at=xvals, labels=xlab,las=2)
germTD.m
summary(germtimeDbimph)
summary(germprbDbimph)
flowerbitax <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrtax.sim2,data=flowering,family="multinomial2",prior=priornr,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)
summary(flowerbitax)
flowerbitaxnr <- flowerbitax
flowerbitax <- MCMCglmm(cbind(isEarlyOrNrw, notEarlyOrNrw)~micrtax.sim2,random = ~dummyWOSrelrank,data=flowering,family="multinomial2",prior=priornuup,verbose=F,pr=T,nitt=1000000,thin=50,burnin=1000)
summary(flowerbitax)
xvals <- c(seq(from=0,to=1,length.out=c(4+3+3+5+4+2+1) ))#
xlab <- c("bacteria","myc fungi","mixed","other fungi","community","strain","strain mix","annual","both","perennial","root","seed","shoot","v. w/ reprod","v. w/o reprod","nutrients","other beneficial","pathogen","phytohormones","outcrosser","selfer","All")#
par(mfrow=c(3,1))#
par(mar=c(1,0,1,0))#
par(oma=c(5,4,1,1))####NOTE THAT SOME OF THESE ARE ONLY SIG AT 0.9#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.3,1.2),yaxt="n")#
	points(unlist(flwrE.m)~xvals,pch=16)#
	points(unlist(flwrD.m)~I(xvals+0.01),pch=16,col="gray")#
	arrows(x0=xvals , y0=flwrE.m -flwrE.se, y1 = flwrE.m +flwrE.se,length=0     )#
	arrows(x0=xvals+0.01 , y0=flwrD.m -flwrD.se, y1 = flwrD.m +flwrD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsFE)#
	text(xvals,y=-0.2,siggroupsFD,col="gray")#
	mtext(side=3,"flowering time")#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Earlier","Delay"),fill=c("black","gray"),bty="n")#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.3,1.2),yaxt="n")#
	points(unlist(germTE.m)~xvals,pch=16)#
	points(unlist(germTD.m)~I(xvals+0.01),pch=16,col="gray")#
	arrows(x0=xvals , y0=germTE.m -germTE.se, y1 = germTE.m +germTE.se,length=0     )#
	arrows(x0=xvals+0.01 , y0=germTD.m -germTD.se, y1 = germTD.m +germTD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsGtE)#
	text(xvals,y=-0.2,siggroupsGtD,col="gray")#
	mtext(side=3,"germination time")#
	mtext(side=2,"Prb of observing Effect",line=2)#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Earlier","Delay"),fill=c("black","gray"),bty="n")#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.3,1.2),yaxt="n")#
	points(unlist(germPE.m)~xvals[-19],pch=16)#
	points(unlist(germPD.m)~I(xvals[-19]+0.01),pch=16,col="gray")#
	arrows(x0=xvals[-19] , y0=germPE.m -germPE.se, y1 = germPE.m +germPE.se,length=0     )#
	arrows(x0=xvals[-19]+0.01 , y0=germPD.m -germPD.se, y1 = germPD.m +germPD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsGpE)#
	text(xvals,y=-0.2,siggroupsGpD,col="gray")#
	mtext(side=3,"germination probability")#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Narrowed","Expanded"),fill=c("black","gray"),bty="n")#
axis(side=1,at=xvals, labels=xlab,las=2)
table(flowering$dummyWOS)
table(germtime$dummyWOS)
table(germprb$dummyWOS)
table(germprb$WOS.relevance.rank)
pdf("means_ses_and prelim fitted diffs from binom.pdf",height=6,width=5)#
xvals <- c(seq(from=0,to=1,length.out=c(4+3+3+5+4+2+1) ))#
xlab <- c("bacteria","myc fungi","mixed","other fungi","community","strain","strain mix","annual","both","perennial","root","seed","shoot","v. w/ reprod","v. w/o reprod","nutrients","other beneficial","pathogen","phytohormones","outcrosser","selfer","All")#
par(mfrow=c(3,1))#
par(mar=c(1,0,1,0))#
par(oma=c(5,4,1,1))####NOTE THAT SOME OF THESE ARE ONLY SIG AT 0.9#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.3,1.2),yaxt="n")#
	points(unlist(flwrE.m)~xvals,pch=16)#
	points(unlist(flwrD.m)~I(xvals+0.01),pch=16,col="gray")#
	arrows(x0=xvals , y0=flwrE.m -flwrE.se, y1 = flwrE.m +flwrE.se,length=0     )#
	arrows(x0=xvals+0.01 , y0=flwrD.m -flwrD.se, y1 = flwrD.m +flwrD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsFE)#
	text(xvals,y=-0.2,siggroupsFD,col="gray")#
	mtext(side=3,"flowering time")#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Earlier","Delay"),fill=c("black","gray"),bty="n")#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.3,1.2),yaxt="n")#
	points(unlist(germTE.m)~xvals,pch=16)#
	points(unlist(germTD.m)~I(xvals+0.01),pch=16,col="gray")#
	arrows(x0=xvals , y0=germTE.m -germTE.se, y1 = germTE.m +germTE.se,length=0     )#
	arrows(x0=xvals+0.01 , y0=germTD.m -germTD.se, y1 = germTD.m +germTD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsGtE)#
	text(xvals,y=-0.2,siggroupsGtD,col="gray")#
	mtext(side=3,"germination time")#
	mtext(side=2,"Prb of observing Effect",line=2)#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Earlier","Delay"),fill=c("black","gray"),bty="n")#
plot(c(0,1)~I(c(0,1)),pch=NA,xlab="",ylab="",bty="n",xaxt="n",ylim=c(-0.3,1.2),yaxt="n")#
	points(unlist(germPE.m)~xvals[-19],pch=16)#
	points(unlist(germPD.m)~I(xvals[-19]+0.01),pch=16,col="gray")#
	arrows(x0=xvals[-19] , y0=germPE.m -germPE.se, y1 = germPE.m +germPE.se,length=0     )#
	arrows(x0=xvals[-19]+0.01 , y0=germPD.m -germPD.se, y1 = germPD.m +germPD.se,length=0  ,col="gray"   )#
	abline(v= c(sum(xvals[4:5])/2, sum(xvals[7:8])/2, sum(xvals[10:11])/2, #
				sum(xvals[15:16])/2,sum(xvals[19:20])/2, sum(xvals[21:22])/2 ),lty=3 )#
	text(xvals,y=1.2,siggroupsGpE)#
	text(xvals,y=-0.2,siggroupsGpD,col="gray")#
	mtext(side=3,"germination probability")#
	axis(side=2,at=c(0,0.25,0.5,0.75,1),labels=c(0," ",0.5, " ",1))#
legend(xvals[12],y=1.2,c("Narrowed","Expanded"),fill=c("black","gray"),bty="n")#
axis(side=1,at=xvals, labels=xlab,las=2)#
dev.off()
rm(list=ls())
library(geosphere)#
library(ade4)#
library(SDMTools) #this is just for legend gradients#
library(MCMCglmm)#
#
range01=function(x){#
newnums=(x-min(x,na.rm=T))/(max(x,na.rm=T)-min(x,na.rm=T))#
return(newnums)#
}#
#
bw <- colorRampPalette(c(rgb(1,1,1),rgb(0,0,0)))#
#
#a remove missing data function:#
getfull <- function(dat){#
	whichfull <- which(sapply(1:nrow(dat), function(z) any(is.na(dat[z,]) ) )==FALSE)#
	return(whichfull)#
}#
#
#shortcut for coda HPDinterval #
HPDi <- function(vect,prob){#
	int <- HPDinterval(as.mcmc(vect),prob=prob)#
	return(int)#
}#
#
bufferX <- function(x,p) { #
	r<- range(x,na.rm=T)#
	add <- c(-1,1)*p*(r[2]-r[1])#
	return(r+add)#
	}	#
std.error <- function(dat, na.rm=TRUE) {sd(dat,na.rm=na.rm)/sqrt(length(dat))}#defaults to na.rm=T#
#
MapToWellsBZ <- function(dat,map,firstcol, sumcols, meancols){ #columns labeled "plate" "number",#
		#roi is in the BZT2 files the coordinates of the shape, and "number" is the simple ROI number#
	n <- nrow(map)#
	outdata <- matrix(NA,nrow=n, ncol=(length(sumcols)+length(meancols)+1))#
	for(i in 1:n){#
		rois <- map[i,firstcol:ncol(map)] #what happens to NA values#
		p <- map$plate[i]#
		welldat <- dat[dat$plate==p & dat$number%in%rois,]#
		welldat.sums <- colSums(welldat[,sumcols])#
		welldat.means <- colMeans(welldat[,meancols],na.rm=T)#
		wellstats <- c(nrow(welldat),welldat.sums,welldat.means)#
		outdata[i,] <- wellstats#
		}#
	mappeddata <- cbind(map[,1:(firstcol-1)],outdata)#
	colnames(mappeddata) <- c(colnames(map)[1:(firstcol-1)],"particles",colnames(dat)[sumcols],colnames(dat)[meancols])#
	return(mappeddata)#
}#
sampleinfo 		<- read.csv("~/Dropbox/salt BT round 2/Lemna_microbiome_barebones_meta_inbzt2.csv",header=T,stringsAsFactors=F)#
duclocs <- read.csv("~/Dropbox/duckweed locations Jan11 2018.csv",stringsAsFactors=F,header=T)#
roaddens <- read.csv("~/Dropbox/Roaddensityin_locsbzs2.csv",header=T, stringsAsFactors=F)#
sampleinfo$lat <- unlist(sapply(1:nrow(sampleinfo), function(z) duclocs$lat[which(duclocs[,2]==sampleinfo$site.id[z])]))#
sampleinfo$lon <- unlist(sapply(1:nrow(sampleinfo), function(z) duclocs$lon[which(duclocs[,2]==sampleinfo$site.id[z])]))#
issampleinfoinrdense <- sapply(1:nrow(sampleinfo), function(z) sampleinfo$site.id[z]%in%roaddens[,2])#
roaddensinsi <- unlist(sapply(1:nrow(sampleinfo), function(z) roaddens$road.density.m.km2[which(roaddens[,2]==sampleinfo$site.id[z])]))#
sampleinfo$roaddens <- rep(NA, times=nrow(sampleinfo))#
sampleinfo$roaddens[ issampleinfoinrdense] <- roaddensinsi#
sampleinfo$km.cityC <- distHaversine(matrix(cbind(-1*sampleinfo$lon,sampleinfo$lat),ncol=2),c(-79.3832,43.6532))/1000#
bzsinfou <- sampleinfo[sampleinfo$fieldormaster=="M"& !is.na(sampleinfo$bzs2),]#
bzsinfo <- bzsinfou[order(bzsinfou$bzs2),]#
#OD dat#
bzs2.raw <- read.csv("~/Dropbox/salt BT round 2/AO BZS.2.ODall.csv",header=T,stringsAsFactors=F)#
#first, need to add coordinates for experimental plate. 2 48-well plates were run for optical density in 1 96-well plate#
#first plate in cols 1-6, next in 7-12 two samples from each well so A went to both A&B in the 96-well ,#
bzs2.raw$plate <- as.numeric(sapply(1:nrow(bzs2.raw), function(z) unlist(strsplit(bzs2.raw$OD.plate[z],split="[.]"))[1] ))#
bzs2.raw$pair <- sapply(1:nrow(bzs2.raw), function(z)   ifelse(bzs2.raw$OD.col[z] <=6, "I","II"))#
bzs2.raw$platepair <- paste(bzs2.raw$plate,bzs2.raw$pair,sep=".")#
bzs2.raw$row <- sapply(bzs2.raw$OD.row, function(z) #
	  if(z == "A" | z == "B") "A" else if(z == "C" | z == "D") "B" else if(z == "E" | z== "F") "C" else "D" )#
bzs2.raw$col <- sapply(bzs2.raw$OD.col, function(z) ifelse(z<= 6, z, z-6))	  #
#blank?#
#there are some problems with the blank measurements as is; so I reccommend NOT correcting based on the blank for now, use OD.raw#
#otherwise this might include subtracting the average of blank start and blank end measures from OD600 and OD750 raw values#
#then using these corrected numbers in the future.#
#ultimately we should blank. But some reads clearly have errors, especially the start blanks (sometimes plate was not rinsed first! bad protocol)#
#so sometimes you'd want to blank with the start, sometimes with the end, or sometimes with none.#
#there are clear trends (high OD in columns mid-plate, and higher OD for rows )#
#visualize issue:#
plot(bzs2.raw$Blankend.600~jitter(bzs2.raw$OD.col))#
plot(bzs2.raw$Blankend.600~jitter(as.numeric(as.factor(bzs2.raw$OD.row))))#
#we might need to separate out the unique blank measures (1-2 per measuring session) by hand, and then create an average for each cell of the plate#
#alternately can fit a model to the numeric row, numeric column, and squared terms for each, then use the residuals of this as the response variable #
#This second option might be best, as we probably will ultimately want to do this for pixel area and/or frond number too -- in previous big experiments we saw plate edge effects#
##
#how to take the average for each well (well have two measures)#
fullloc <- paste(bzs2.raw$plate,bzs2.raw$pair,bzs2.raw$row,bzs2.raw$col,sep=".") #
od600 <- tapply(bzs2.raw$OD600.raw, fullloc, mean,na.rm=T)#
od750 <- tapply(bzs2.raw$OD750.raw, fullloc, mean,na.rm=T)#
plate <- tapply(bzs2.raw$plate, fullloc, mean,na.rm=T)#
pair <-  c("I","II")[tapply(as.numeric(as.factor(bzs2.raw$pair)), fullloc, mean,na.rm=T)]#
cols <- tapply(bzs2.raw$col, fullloc, mean,na.rm=T)#
rows <- c("A","B","C","D")[tapply(as.numeric(as.factor(bzs2.raw$row)), fullloc, mean,na.rm=T)]#
##
od_datRawu <- data.frame(plate = plate, pair = pair, row=rows, col = cols,od600 = od600, od750 = od750)#
od_datRaw <- od_datRawu[order(od_datRawu$plate, od_datRawu$pair,od_datRawu$row,od_datRawu$col,decreasing=F ),] #note the tapply(), then this re-sorts so to sort by plate, then ROW then column, which matches clara's frond data sorting#
#sorting still required, because otherwise it's alphabetical by the tapply levels, and plates 10-19 come before plates 2-9 & etc#
#
#frond data#
frondsRaw <- read.csv("~/Dropbox/salt BT round 2/BZS2 Frond Clara.csv",stringsAsFactors=F,header=T)#
#pixel area data#
##
endmapu <- read.csv("~/Dropbox/salt BT round 2/end_map_12-01.csv",header=T)#
endmap <- endmapu[order( as.numeric(endmapu$plate), endmapu$row, endmapu$column  ),]#
endfulldat <- read.csv("~/Dropbox/salt BT round 2/end_data_pastedDec1.csv",header=T) # note column X.area is %area from imageJ
startmapu <- read.csv("~/Dropbox/salt BT round 2/start map ALL.csv",header=T)#
startmap <- endmapu[order( as.numeric(endmapu$plate), endmapu$row, endmapu$column  ),]#
startfulldat <- read.csv("~/Dropbox/salt BT round 2/start data ALL.csv",header=T) # note column X.area is %area from imageJ
colnames(startfulldat)
colnames(startmap)
head(startfulldat)
head(enddat)
head(endfulldat)
head(endfulldat2)
#there is a plate column, but not image name column in the map file. we therefore need to extract plate from the dat file#
colors <- c("(blue)","(green)","(red)")#
colorrows <- lapply(colors,function(z) grep(z,endfulldat$label))#
##
endfulldat2 <- endfulldat[-unlist(colorrows),]#
endfulldat2$redraw <- endfulldat[colorrows[[3]],]$mean#
endfulldat2$greenraw <- endfulldat[colorrows[[2]],]$mean#
endfulldat2$blueraw <- endfulldat[colorrows[[1]],]$mean#
##CHECK THAT THEY LINE UP, should be 1/4 nrow(endfulldat)#
nrow(endfulldat) == 4*length(colorrows[[3]])#
sum(endfulldat2$area == endfulldat[colorrows[[3]],]$area) == 0.25*nrow(endfulldat)#
sum(endfulldat2$area == endfulldat[colorrows[[2]],]$area)== 0.25*nrow(endfulldat)#
sum(endfulldat2$area == endfulldat[colorrows[[1]],]$area)== 0.25*nrow(endfulldat)#
endfulldat2$perred <- endfulldat2$redraw/(3*endfulldat2$mean)#
endfulldat2$pergreen <- endfulldat2$greenraw/(3*endfulldat2$mean)#
endfulldat2$perblue <- endfulldat2$blueraw/(3*endfulldat2$mean)#
##
platepix <- sapply(1:nrow(endfulldat2), function(z) strsplit(#
									strsplit(as.character(endfulldat2$label[z]),"plate",fixed=T)[[1]][[2]],#
										".J") [[1]][[1]]										)#
endfulldat2$plate <- platepix#
enddatU <- MapToWellsBZ(endfulldat2,endmap,firstcol=6,sumcols = c(5,7),meancols =c(6,8,10:12,16:18) )#
enddat <- enddatU[order( as.numeric(enddatU$plate), enddatU$row, enddatU$column  ),]
head(endfulldat2)
head(endfulcolorrowsS <- lapply(colors,function(z) grep(z,startfulldat$label))#
startfulldat2 <- startfulldat[-unlist(colorrowsS),]#
startfulldat2$redraw <- startfulldat[colorrowsS[[3]],]$mean#
startfulldat2$greenraw <- startfulldat[colorrowsS[[2]],]$mean#
startfulldat2$blueraw <- startfulldat[colorrowsS[[1]],]$mean#
nrow(startfulldat) == 4*length(colorrowsS[[3]])#
ldat2)
colorrowsS <- lapply(colors,function(z) grep(z,startfulldat$label))#
startfulldat2 <- startfulldat[-unlist(colorrowsS),]#
startfulldat2$redraw <- startfulldat[colorrowsS[[3]],]$mean#
startfulldat2$greenraw <- startfulldat[colorrowsS[[2]],]$mean#
startfulldat2$blueraw <- startfulldat[colorrowsS[[1]],]$mean#
nrow(startfulldat) == 4*length(colorrowsS[[3]])
sum(startfulldat2$area == startfulldat[colorrowsS[[3]],]$area) == 0.25*nrow(startfulldat)#
sum(startfulldat2$area == startfulldat[colorrowsS[[2]],]$area)== 0.25*nrow(startfulldat)#
sum(startfulldat2$area == startfulldat[colorrowsS[[1]],]$area)== 0.25*nrow(startfulldat)
startfulldat2$perred <- startfulldat2$redraw/(3*startfulldat2$mean)#
startfulldat2$pergreen <- startfulldat2$greenraw/(3*startfulldat2$mean)#
startfulldat2$perblue <- startfulldat2$blueraw/(3*startfulldat2$mean)#
platepixS <- sapply(1:nrow(startfulldat2), function(z) strsplit(#
									strsplit(as.character(startfulldat2$label[z]),"plate",fixed=T)[[1]][[2]],#
										".J") [[1]][[1]]										)#
startfulldat2$plate <- platepixS#
startdatU <- MapToWellsBZ(startfulldat2,startmap,firstcol=6,sumcols = c(4,6),meancols =c(5,7,9:11,15:17) )#
startdat <- startdatU[order( as.numeric(startdatU$plate), startdatU$row, startdatU$column  ),]
head(startdat)
head(enddat)
head(colorrowsS)
str(colorrowsS)
any(colorrowsS[[1]]%in%colorrowsS[[2]])
head(startfulldat2)
table(startfulldat2$plate)
table(endfulldat2$plate)
head(startmap)
head(endmap)
startmapu <- read.csv("~/Dropbox/salt BT round 2/start map ALL.csv",header=T)#
startmap <- startmapu[order( as.numeric(startmapu$plate), startmapu$row, startmapu$column  ),]#
startfulldat <- read.csv("~/Dropbox/salt BT round 2/start data ALL.csv",header=T) # note column X.area is %area from imageJ
colorrowsS <- lapply(colors,function(z) grep(z,startfulldat$label))#
startfulldat2 <- startfulldat[-unlist(colorrowsS),]#
startfulldat2$redraw <- startfulldat[colorrowsS[[3]],]$mean#
startfulldat2$greenraw <- startfulldat[colorrowsS[[2]],]$mean#
startfulldat2$blueraw <- startfulldat[colorrowsS[[1]],]$mean#
nrow(startfulldat) == 4*length(colorrowsS[[3]])#
sum(startfulldat2$area == startfulldat[colorrowsS[[3]],]$area) == 0.25*nrow(startfulldat)#
sum(startfulldat2$area == startfulldat[colorrowsS[[2]],]$area)== 0.25*nrow(startfulldat)#
sum(startfulldat2$area == startfulldat[colorrowsS[[1]],]$area)== 0.25*nrow(startfulldat)#
startfulldat2$perred <- startfulldat2$redraw/(3*startfulldat2$mean)#
startfulldat2$pergreen <- startfulldat2$greenraw/(3*startfulldat2$mean)#
startfulldat2$perblue <- startfulldat2$blueraw/(3*startfulldat2$mean)#
platepixS <- sapply(1:nrow(startfulldat2), function(z) strsplit(#
									strsplit(as.character(startfulldat2$label[z]),"plate",fixed=T)[[1]][[2]],#
										".J") [[1]][[1]]										)#
startfulldat2$plate <- platepixS#
startdatU <- MapToWellsBZ(startfulldat2,startmap,firstcol=6,sumcols = c(4,6),meancols =c(5,7,9:11,15:17) )#
startdat <- startdatU[order( as.numeric(startdatU$plate), startdatU$row, startdatU$column  ),]
head(startmap)
head(startdat)
head(enddat)
head(endmap)
head(startmap)
startdatU <- MapToWellsBZ(startfulldat2,startmap,firstcol=5,sumcols = c(4,6),meancols =c(5,7,9:11,15:17) )#
startdat <- startdatU[order( as.numeric(startdatU$plate), startdatU$row, startdatU$column  ),]
table(startmap$plate)
any(table(startmap$plate)!=24)
table(startmap$row)
table(startmap$column)
head(startdat)
hist(startdat$area)
hist(startdat$area)
hist(enddat$area)
hist(enddat$area-startdat$area)
arabicpairod <- ifelse(od_datRaw$pair=="I",1,2)#
arabicppod <- as.numeric (paste(od_datRaw$plate,arabicpairod,sep="."))#
# same_sampleid <- paste(arabicplateod,paste(od_datRaw$row,od_datRaw$col,sep=""),sep=".")#
arabicplatefr <- sapply(1:nrow(frondsRaw), function(z) strsplit(frondsRaw$plate[z],"[.]")[[1]][1])#
pairfr <-  sapply(1:nrow(frondsRaw), function(z) strsplit(frondsRaw$plate[z],"[.]")[[1]][2])#
arabicpairfr <-  ifelse(pairfr=="I",1,2)#
arabicppfr <- paste(arabicplatefr,arabicpairfr,sep=".")#
#
#checks that data align as hoped across datasets#
sum(arabicppfr == arabicppod)#
sum(arabicppfr == enddat$plate)#
sum(arabicppfr == startdat$plate)
sum(frondsRaw$column == od_datRaw$col)#
sum(frondsRaw$column == enddat$column)#
sum(frondsRaw$row == od_datRaw$row)#
sum(frondsRaw$row == enddat$row)
frondsRaw$arabicpp <- arabicppfr#
od_datRaw$arabicpp <- arabicppod
fronds <- frondsRaw[frondsRaw$unfixed.error != "ERROR",]#
od_dat <- od_datRaw[frondsRaw$unfixed.error != "ERROR",]#
endpix <- enddat[frondsRaw$unfixed.error != "ERROR",]#
startpix <- startdat[frondsRaw$unfixed.error != "ERROR",]
nrow(startpix)
nrow(endpix)
fronds$genotype[od_dat$plate==23 & fronds$col==6] <- "Mnt"#
fronds$genotype[od_dat$plate==23 & fronds$col==4] <- "SHB"#
#
biodat <- data.frame(cbind(fronds[1:14],od_dat$od600,od_dat$od750,endpix[,c(2,6:16)]))#
biodat$microbeyn <- ifelse(biodat$microbe=="+","Y","N")#
biodatlocs <- sapply(biodat$genotype, function(x) bzsinfo$km.cityC[which(as.character(bzsinfo$bzs2)==as.character(x))])#
biodat$loc <- biodatlocs#
biodat$rddns <- sapply(biodat$genotype, function(x) bzsinfo$roaddens[which(as.character(bzsinfo$bzs2)==as.character(x))])
paste("start",colnames(startdat),sep="_")
colnames(startpix) <- paste("start",colnames(startdat),sep="_")
head(enpix)
head(endpix)
biodat <- data.frame(cbind(fronds[1:14],od_dat$od600,od_dat$od750,endpix[,c(2,6:16)],startpix[,c(1,5:15)]))
head(biodat)
biodat$deltapix <- biodat$area - biodat$start_area
dpixR <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT + rddns:Salt + BZT:microbe + BZT:Salt + microbe:Salt + #
						rddns:microbe:BZT + rddns:BZT:Salt + rddns:microbe:Salt + microbe:Salt:BZT, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
biodat <- data.frame(cbind(fronds[1:14],od_dat$od600,od_dat$od750,endpix[,c(2,6:16)],startpix[,c(1,5:15)]))#
biodat$microbeyn <- ifelse(biodat$microbe=="+","Y","N")#
biodatlocs <- sapply(biodat$genotype, function(x) bzsinfo$km.cityC[which(as.character(bzsinfo$bzs2)==as.character(x))])#
biodat$loc <- biodatlocs#
biodat$rddns <- sapply(biodat$genotype, function(x) bzsinfo$roaddens[which(as.character(bzsinfo$bzs2)==as.character(x))])#
biodat$deltapix <- biodat$area - biodat$start_area
dpixR <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT + rddns:Salt + BZT:microbe + BZT:Salt + microbe:Salt + #
						rddns:microbe:BZT + rddns:BZT:Salt + rddns:microbe:Salt + microbe:Salt:BZT, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixR)
dpixRr1 <- dpixR
dpixR <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT + rddns:Salt + BZT:microbe + BZT:Salt + microbe:Salt + #
						rddns:microbe:BZT + rddns:BZT:Salt + rddns:microbe:Salt + microbe:Salt:BZT + microbe:Salt:BZT:rddens, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
dpixR <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT + rddns:Salt + BZT:microbe + BZT:Salt + microbe:Salt + #
						rddns:microbe:BZT + rddns:BZT:Salt + rddns:microbe:Salt + microbe:Salt:BZT + microbe:Salt:BZT:rddns, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixR)
summary(dpixRr1)
dpixRr2 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT + rddns:Salt + BZT:microbe + BZT:Salt + microbe:Salt + #
						rddns:microbe:BZT + rddns:microbe:Salt + microbe:Salt:BZT, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr2)
dpixRr3 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT + rddns:Salt + BZT:microbe + BZT:Salt + microbe:Salt + #
						 rddns:microbe:Salt + microbe:Salt:BZT, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr3)
dpixRr4 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT + rddns:Salt + BZT:microbe + BZT:Salt + microbe:Salt + #
						 rddns:microbe:Salt, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr4)
dpixRr5 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT + rddns:Salt + BZT:microbe + BZT:Salt + microbe:Salt, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr5)
dpixRr6 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT + rddns:Salt + BZT:microbe + BZT:Salt + microbe:Salt, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr5)
summary(dpixRr6)
dpixRr6 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT + rddns:Salt + BZT:microbe + BZT:Salt + microbe:Salt, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr6)
dpixRr6 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT  + BZT:microbe + BZT:Salt + microbe:Salt, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr6)
dpixRr6 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT  + BZT:microbe + BZT:Salt + microbe:Salt, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr6)
dpixRr7 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT  + BZT:Salt + microbe:Salt, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr7)
dpixRr7 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:microbe + rddns:BZT  + BZT:Salt + microbe:Salt, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr7)
dpixRr8 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + rddns:BZT  + BZT:Salt + microbe:Salt, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr8)
cor(cbind(biodat$area,biodat$start_area,biodat$deltapix))
head(biodat)
cor(cbind(biodat$area,biodat$start_area,biodat$deltapix,biodat$particles,biodat$start_particles))
cor(cbind(biodat$area,biodat$start_area,biodat$deltapix,biodat$particles,biodat$start_particles,biodat$X10.FN))
cor(cbind(biodat$area,biodat$start_area,biodat$deltapix,biodat$particles,biodat$start_particles,biodat$X10.FN,biodat$X0.FN,biodat$X10.FN-biodat$X0.FN))
dpixRr9 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + BZT:Salt + microbe:Salt, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr8)
summary(dpixRr9)
dpixRr10 <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + BZT:Salt , data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr10)
dpixL <- MCMCglmm(deltapix~loc +  microbe + BZT + Salt + loc:microbe + loc:BZT + loc:Salt + BZT:microbe + BZT:Salt + microbe:Salt + #
						loc:microbe:BZT + loc:BZT:Salt + loc:microbe:Salt + microbe:Salt:BZT  + microbe:Salt:BZT:loc, data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixL)
dpixLr1 <- MCMCglmm(deltapix~loc +  microbe + BZT + Salt + loc:microbe + loc:BZT + loc:Salt + BZT:microbe + BZT:Salt + microbe:Salt + #
						loc:microbe:BZT + loc:BZT:Salt + loc:microbe:Salt + microbe:Salt:BZT , data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixLr1)
dpixLr2 <- MCMCglmm(deltapix~loc +  microbe + BZT + Salt + loc:microbe + loc:BZT + loc:Salt + BZT:microbe + BZT:Salt + microbe:Salt + #
						loc:microbe:BZT + loc:BZT:Salt +  microbe:Salt:BZT , data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixLr2)
dpixLr3 <- MCMCglmm(deltapix~loc +  microbe + BZT + Salt + loc:microbe + loc:BZT + loc:Salt + BZT:microbe + BZT:Salt + microbe:Salt + #
						loc:microbe:BZT +  microbe:Salt:BZT , data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixLr3)
dpixLr4 <- MCMCglmm(deltapix~loc +  microbe + BZT + Salt + loc:microbe + loc:BZT + loc:Salt + BZT:microbe + BZT:Salt + microbe:Salt + #
						  microbe:Salt:BZT , data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixLr4)
dpixLr5 <- MCMCglmm(deltapix~loc +  microbe + BZT + Salt + loc:microbe + loc:BZT + loc:Salt + BZT:microbe + BZT:Salt + microbe:Salt  , data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixLr5)
summary(dpixRr5)
dpixLr6 <- MCMCglmm(deltapix~loc +  microbe + BZT + Salt  + loc:BZT + loc:Salt + BZT:microbe + BZT:Salt + microbe:Salt  , data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixRr6)
dpixLr7 <- MCMCglmm(deltapix~loc +  microbe + BZT + Salt  + loc:BZT + loc:Salt  + BZT:Salt + microbe:Salt  , data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
dpixrdmn
dpixrdmn <- tapply(biodat$deltapix,biodat$rddns,mean)
dpixrdmn
range(dpixrdmn )
summary(dpixRr7)
summary(dpixLr6)
summary(dpixLr5)
summary(dpixLr6)
summary(dpixLr7)
dpixLr6 <- MCMCglmm(deltapix~loc +  microbe + BZT + Salt  + loc:BZT + loc:Salt + BZT:microbe + BZT:Salt + microbe:Salt  , data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixLr6)
summary(dpixLr7)
dpixLr8 <- MCMCglmm(deltapix~loc +  microbe + BZT + Salt  + loc:BZT   + BZT:Salt + microbe:Salt  , data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixLr8)
dpixLr9 <- MCMCglmm(deltapix~loc +  microbe + BZT + Salt    + BZT:Salt + microbe:Salt  , data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixLr9)
dpixLr10 <- MCMCglmm(deltapix~loc +  microbe + BZT + Salt    + BZT:Salt   , data=biodat,verbose=F, nitt=50000,thin=10,burnin=1000,pr=T)
summary(dpixLr10)
summary(dpixRr10)
dpixRbest <- MCMCglmm(deltapix~rddns +  microbe + BZT + Salt + BZT:Salt , #
						data=biodat,verbose=F, nitt=100000,thin=10,burnin=10000,pr=T)#
rd.s <- seq(from=min(biodat$rddns),to=max(biodat$rddns),length.out=1000)#
dpxsolrd <- dpixRbest$Sol#
dpxng.mnrd <- sapply(1:length(rd.s), function(z) mean(dpxsolrd[,1]+ dpxsolrd[,2]*rd.s[z] + dpxsolrd[,3]*0.5 + dpxsolrd[,4]*0.5+ dpxsolrd[,5]*0.5 + dpxsolrd[,6]*0.5) )#
dpxng.hpdird <- sapply(1:length(rd.s), function(z) HPDi(dpxsolrd[,1]+ dpxsolrd[,2]*rd.s[z] + dpxsolrd[,3]*0.5 + dpxsolrd[,4]*0.5+ dpxsolrd[,5]*0.5 + dpxsolrd[,6]*0.5, 0.95) )#
dpixrdmn <- tapply(biodat$deltapix,biodat$rddns,mean)#
rdrd <- tapply(biodat$rddns,biodat$rddns,mean)#
locmn <- tapply(biodat$loc,biodat$loc,mean)#
dpix.mns <- tapply(biodat$deltapix, paste(biodat$Salt,biodat$BZT),mean)#
dpix.ses <- tapply(biodat$deltapix, paste(biodat$Salt,biodat$BZT),std.error)
range(dpix.mns)
range(dpix.ses)
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixrdmn~rdrd,pch=NA,ylab="",xlab="",ylim=c(-5000,15000))#biodat$area~biodat$loc#
	polygon(c(rd.s,rev(rd.s)), y=c(dpxng.hpdird[1,],rev(dpxng.hpdird[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpxng.mnrd~rd.s)	#
	points(dpixrdmn~rdrd,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	mtext("road density m/km^2",side=1,line=2.2)#
plot(dpix.mns~c(2,3,2,3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)),#
		ylim=c(1000,5000))#
	arrows(c(2,3,2,3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("0","0.8"))#
	mtext("Salt g/L",side=1,line=2.2)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	legend(2.75,12200,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixrdmn~rdrd,pch=NA,ylab="",xlab="",ylim=c(-5000,15000))#biodat$area~biodat$loc#
	polygon(c(rd.s,rev(rd.s)), y=c(dpxng.hpdird[1,],rev(dpxng.hpdird[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpxng.mnrd~rd.s)	#
	points(dpixrdmn~rdrd,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	mtext("road density m/km^2",side=1,line=2.2)#
plot(dpix.mns~c(2,3,2,3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)),#
		ylim=c(1000,5000))#
	arrows(c(2,3,2,3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("0","0.8"))#
	mtext("Salt g/L",side=1,line=2.2)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	legend(2.75,5000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))
dpix.mns
mpix.ngrd.sol <- MCMCglmm(area~rddns  + BZT + Salt +  BZT:Salt , #
						data=biodat,verbose=F, nitt=100000,thin=10,burnin=10000,pr=T)#
rd.s <- seq(from=min(biodat$rddns),to=max(biodat$rddns),length.out=1000)#
mpxngsolrd <- mpix.ngrd.sol$Sol#
mpxng.mnrd <- sapply(1:length(rd.s), function(z) mean(mpxngsolrd[,1]+ mpxngsolrd[,2]*rd.s[z] + mpxngsolrd[,3]*0.5+ mpxngsolrd[,4]*0.5 + mpxngsolrd[,5]*0.5) )#
mpxng.hpdird <- sapply(1:length(rd.s), function(z) HPDi(mpxngsolrd[,1]+ mpxngsolrd[,2]*rd.s[z] + mpxngsolrd[,3]*0.5+ mpxngsolrd[,4]*0.5 + mpxngsolrd[,5]*0.5, 0.95) )#
pixrdmn <- tapply(biodat$area,biodat$rddns,mean)#
rdrd <- tapply(biodat$rddns,biodat$rddns,mean)#
endpix.ng.mns <- tapply(biodat$area, paste(biodat$Salt,biodat$BZT),mean)#
endpix.ng.ses <- tapply(biodat$area, paste(biodat$Salt,biodat$BZT),std.error)
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(pixrdmn~rdrd,pch=NA,ylab="",xlab="",ylim=c(-3000,25000))#biodat$area~biodat$loc#
	polygon(c(rd.s,rev(rd.s)), y=c(mpxng.hpdird[1,],rev(mpxng.hpdird[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(mpxng.mnrd~rd.s)	#
	points(pixrdmn~rdrd,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Area",side=2,line=2.5)#
	mtext("road density m/km^2",side=1,line=2.2)#
plot(endpix.ng.mns~c(2,2,3,3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(8000,12000))#
	arrows(c(2,2,3,3),endpix.ng.mns-endpix.ng.ses,y1=endpix.ng.mns+endpix.ng.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75))), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("0","0.8"))#
	mtext("Salt g/L",side=1,line=2.2)#
	mtext("Duckweed Area",side=2,line=2.5)#
	legend(2.75,12200,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))
arrows(c(2,2,3,3),endpix.ng.mns-endpix.ng.ses,y1=endpix.ng.mns+endpix.ng.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)
endpix.ng.mns
dpix.ng.mns
dpix.mns
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixrdmn~rdrd,pch=NA,ylab="",xlab="",ylim=c(-5000,15000))#biodat$area~biodat$loc#
	polygon(c(rd.s,rev(rd.s)), y=c(dpxng.hpdird[1,],rev(dpxng.hpdird[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpxng.mnrd~rd.s)	#
	points(dpixrdmn~rdrd,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	mtext("road density m/km^2",side=1,line=2.2)#
plot(dpix.mns~c(2,2,3,3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5000))#
	arrows(c(2,2,3,3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("0","0.8"))#
	mtext("Salt g/L",side=1,line=2.2)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	legend(2.75,5000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))
pdf("~/Dropbox/salt BT round 2/dpix_sigcats_withoutgeno_rddens.pdf",width=7,height=3)#
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixrdmn~rdrd,pch=NA,ylab="",xlab="",ylim=c(-5000,15000))#biodat$area~biodat$loc#
	polygon(c(rd.s,rev(rd.s)), y=c(dpxng.hpdird[1,],rev(dpxng.hpdird[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpxng.mnrd~rd.s)	#
	points(dpixrdmn~rdrd,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	mtext("road density m/km^2",side=1,line=2.2)#
plot(dpix.mns~c(2,2,3,3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5000))#
	arrows(c(2,2,3,3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("0","0.8"))#
	mtext("Salt g/L",side=1,line=2.2)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	legend(2.75,5000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
dev.off()
pdf("~/Dropbox/salt BT round 2/pixelarea_sigcats_withoutgeno_rddens.pdf",width=7,height=3)#
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(pixrdmn~rdrd,pch=NA,ylab="",xlab="",ylim=c(-3000,25000))#biodat$area~biodat$loc#
	polygon(c(rd.s,rev(rd.s)), y=c(mpxng.hpdird[1,],rev(mpxng.hpdird[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(mpxng.mnrd~rd.s)	#
	points(pixrdmn~rdrd,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Area",side=2,line=2.5)#
	mtext("road density m/km^2",side=1,line=2.2)#
plot(endpix.ng.mns~c(2,2,3,3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(8000,12000))#
	arrows(c(2,2,3,3),endpix.ng.mns-endpix.ng.ses,y1=endpix.ng.mns+endpix.ng.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("0","0.8"))#
	mtext("Salt g/L",side=1,line=2.2)#
	mtext("Duckweed Area",side=2,line=2.5)#
	legend(2.75,12200,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
dev.off()
mpix.ng.sol <- MCMCglmm(area~loc  + BZT + Salt +  BZT:Salt , #
						data=biodat,verbose=F, nitt=100000,thin=10,burnin=10000,pr=T)#
km.s <- seq(from=min(biodat$loc),to=max(biodat$loc),length.out=1000)#
mpxngsol <- mpix.ng.sol$Sol#
mpxng.mnloc <- sapply(1:length(km.s), function(z) mean(mpxngsol[,1]+ mpxngsol[,2]*km.s[z] + mpxngsol[,3]*0.5+ mpxngsol[,4]*0.5 + mpxngsol[,5]*0.5) )#
mpxng.hpdiloc <- sapply(1:length(km.s), function(z) HPDi(mpxngsol[,1]+ mpxngsol[,2]*km.s[z] + mpxngsol[,3]*0.5+ mpxngsol[,4]*0.5 + mpxngsol[,5]*0.5, 0.95) )#
pixlocmn <- tapply(biodat$area,biodat$loc,mean)#
locloc <- tapply(biodat$loc,biodat$loc,mean)#
endpix.ng.mns <- tapply(biodat$area, paste(biodat$Salt,biodat$BZT),mean)#
endpix.ng.ses <- tapply(biodat$area, paste(biodat$Salt,biodat$BZT),std.error)
endpix.ng.mns
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(pixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(0,25000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(mpxng.hpdiloc[1,],rev(mpxng.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(mpxng.mnloc~km.s)	#
	points(pixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(endpix.ng.mns~c(2,2,3,3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(8000,12000))#
	arrows(c(2,2,3,3),endpix.ng.mns-endpix.ng.ses,y1=endpix.ng.mns+endpix.ng.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("0","0.8"))#
	mtext("Salt g/L",side=1,line=2.2)#
	mtext("Duckweed Area",side=2,line=2.5)#
	legend(3.25,12000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",#
# 		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))
pdf("~/Dropbox/salt BT round 2/pixelarea_sigcats_withoutgeno.pdf",width=7,height=3)#
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(pixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(0,25000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(mpxng.hpdiloc[1,],rev(mpxng.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(mpxng.mnloc~km.s)	#
	points(pixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(endpix.ng.mns~c(2,2,3,3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(8000,12000))#
	arrows(c(2,2,3,3),endpix.ng.mns-endpix.ng.ses,y1=endpix.ng.mns+endpix.ng.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("0","0.8"))#
	mtext("Salt g/L",side=1,line=2.2)#
	mtext("Duckweed Area",side=2,line=2.5)#
	legend(3.25,12000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",#
# 		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))
dpixL.sol <- MCMCglmm(area~loc  + microbe +BZT + Salt +  BZT:Salt , #
						data=biodat,verbose=F, nitt=100000,thin=10,burnin=10000,pr=T)
km.s <- seq(from=min(biodat$loc),to=max(biodat$loc),length.out=1000)#
dpixLsol <- dpixL.sol$Sol#
dpx.mnloc <- sapply(1:length(km.s), function(z) mean(dpixLsol[,1]+ dpixLsol[,2]*km.s[z] + dpixLsol[,3]*0.5+ dpixLsol[,4]*0.5 + dpixLsol[,5]*0.5 + dpixLsol[,6]*0.5) )#
dpx.hpdiloc <- sapply(1:length(km.s), function(z) HPDi(dpixLsol[,1]+ dpixLsol[,2]*km.s[z] + dpixLsol[,3]*0.5+ dpixLsol[,4]*0.5 + dpixLsol[,5]*0.5 + dpixLsol[,6]*0.5, 0.95) )#
dpixlocmn <- tapply(biodat$deltapix,biodat$loc,mean)#
locloc <- tapply(biodat$loc,biodat$loc,mean)#
dpix.mns <- tapply(biodat$deltapix, paste(biodat$microbe,biodat$Salt,biodat$BZT),mean)
dpix.ses <- tapply(biodat$deltapix, paste(biodat$microbe,biodat$Salt,biodat$BZT),std.error)
dpix.mns
range(dpix.mns)
range(dpix.ses)
range(dpixlocmn)
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(-4000,15000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(dpx.hpdiloc[1,],rev(dpx.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpx.mnloc~km.s)	#
	points(dpixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(dpix.mns~c(2,2,2,2,3,3,3,3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2,2,2,3,3,3,3),dpix.ng.mns-dpix.ng.ses,y1=dpix.ng.mns+dpix.ng.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	legend(3.25,12000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",#
# 		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))
arrows(c(2,2,2,2,3,3,3,3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)
dpix.mns <- tapply(biodat$deltapix, paste(biodat$microbe,biodat$Salt,biodat$BZT),mean)#
dpix.ses <- tapply(biodat$deltapix, paste(biodat$microbe,biodat$Salt,biodat$BZT),std.error)
dpix.mns
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(-4000,15000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(dpx.hpdiloc[1,],rev(dpx.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpx.mnloc~km.s)	#
	points(dpixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(dpix.mns~c(2,2,2,2,3,3,3,3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2,2,2,3,3,3,3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	legend(3.25,12000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",
dev.off
dev.off()
pdf("~/Dropbox/salt BT round 2/pixelarea_sigcats_withoutgeno.pdf",width=7,height=3)#
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(pixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(0,25000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(mpxng.hpdiloc[1,],rev(mpxng.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(mpxng.mnloc~km.s)	#
	points(pixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(endpix.ng.mns~c(2,2,3,3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(8000,12000))#
	arrows(c(2,2,3,3),endpix.ng.mns-endpix.ng.ses,y1=endpix.ng.mns+endpix.ng.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("0","0.8"))#
	mtext("Salt g/L",side=1,line=2.2)#
	mtext("Duckweed Area",side=2,line=2.5)#
	legend(3.25,12000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",#
# 		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))#
dev.off()
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(-4000,15000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(dpx.hpdiloc[1,],rev(dpx.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpx.mnloc~km.s)	#
	points(dpixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(dpix.mns~c(2,2,2,2,3,3,3,3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2,2,2,3,3,3,3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	legend(3.25,12000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",#
# 		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(-4000,15000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(dpx.hpdiloc[1,],rev(dpx.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpx.mnloc~km.s)	#
	points(dpixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(dpix.mns~c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2.1,2.2,2.3,3,3.1,3.2,3.3,dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	legend(3.25,12000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",#
# 		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(-4000,15000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(dpx.hpdiloc[1,],rev(dpx.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpx.mnloc~km.s)	#
	points(dpixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(dpix.mns~c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	legend(3.25,12000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",#
# 		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))
head(dpixLsol)
dpx.mnloc <- sapply(1:length(km.s), function(z) mean(dpixLsol[,1]+ dpixLsol[,2]*km.s[z] + dpixLsol[,3]*0.5+ dpixLsol[,4]*0.5 + dpixLsol[,5]*0.5 + dpixLsol[,6]*0.5) )#
dpx.hpdiloc <- sapply(1:length(km.s), function(z) HPDi(dpixLsol[,1]+ dpixLsol[,2]*km.s[z] + dpixLsol[,3]*0.5+ dpixLsol[,4]*0.5 + dpixLsol[,5]*0.5 + dpixLsol[,6]*0.5, 0.95) )
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(-4000,15000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(dpx.hpdiloc[1,],rev(dpx.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpx.mnloc~km.s)	#
	points(dpixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(dpix.mns~c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	legend(3.25,12000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",#
# 		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))
dpixL.sol <- MCMCglmm(deltapix~loc  + microbe +BZT + Salt +  BZT:Salt , #
						data=biodat,verbose=F, nitt=100000,thin=10,burnin=10000,pr=T)
dpixLsol <- dpixL.sol$Sol#
dpx.mnloc <- sapply(1:length(km.s), function(z) mean(dpixLsol[,1]+ dpixLsol[,2]*km.s[z] + dpixLsol[,3]*0.5+ dpixLsol[,4]*0.5 + dpixLsol[,5]*0.5 + dpixLsol[,6]*0.5) )#
dpx.hpdiloc <- sapply(1:length(km.s), function(z) HPDi(dpixLsol[,1]+ dpixLsol[,2]*km.s[z] + dpixLsol[,3]*0.5+ dpixLsol[,4]*0.5 + dpixLsol[,5]*0.5 + dpixLsol[,6]*0.5, 0.95) )#
dpixlocmn <- tapply(biodat$deltapix,biodat$loc,mean)#
locloc <- tapply(biodat$loc,biodat$loc,mean)#
dpix.mns <- tapply(biodat$deltapix, paste(biodat$microbe,biodat$Salt,biodat$BZT),mean)#
dpix.ses <- tapply(biodat$deltapix, paste(biodat$microbe,biodat$Salt,biodat$BZT),std.error)
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(-4000,15000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(dpx.hpdiloc[1,],rev(dpx.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpx.mnloc~km.s)	#
	points(dpixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(dpix.mns~c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	legend(3.25,12000,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",#
# 		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))
pdf("~/Dropbox/salt BT round 2/dpix_sigcats_withoutgeno.pdf",width=7,height=3)#
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(-4000,15000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(dpx.hpdiloc[1,],rev(dpx.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpx.mnloc~km.s)	#
	points(dpixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(dpix.mns~c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	legend(3.25,5200,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",#
# 		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))#
dev.off()
pdf("~/Dropbox/salt BT round 2/dpix_sigcats_withoutgeno.pdf",width=7.5,height=3)#
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(-4000,15000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(dpx.hpdiloc[1,],rev(dpx.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpx.mnloc~km.s)	#
	points(dpixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(dpix.mns~c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	legend(3.25,5200,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",#
# 		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))#
dev.off()
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixrdmn~rdrd,pch=NA,ylab="",xlab="",ylim=c(-5000,15000))#biodat$area~biodat$loc#
	polygon(c(rd.s,rev(rd.s)), y=c(dpxng.hpdird[1,],rev(dpxng.hpdird[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpxng.mnrd~rd.s)	#
	points(dpixrdmn~rdrd,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	mtext("road density m/km^2",side=1,line=2.2)#
plot(dpix.mns~c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	legend(2.75,5200,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))
pdf("~/Dropbox/salt BT round 2/dpix_sigcats_withoutgeno_rddens.pdf",width=7.5,height=3)#
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixrdmn~rdrd,pch=NA,ylab="",xlab="",ylim=c(-5000,15000))#biodat$area~biodat$loc#
	polygon(c(rd.s,rev(rd.s)), y=c(dpxng.hpdird[1,],rev(dpxng.hpdird[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpxng.mnrd~rd.s)	#
	points(dpixrdmn~rdrd,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	mtext("road density m/km^2",side=1,line=2.2)#
plot(dpix.mns~c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,4.75),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	legend(3.25,5200,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
dev.off()
pdf("~/Dropbox/salt BT round 2/dpix_sigcats_withoutgeno_rddens.pdf",width=7.75,height=3)#
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixrdmn~rdrd,pch=NA,ylab="",xlab="",ylim=c(-5000,15000))#biodat$area~biodat$loc#
	polygon(c(rd.s,rev(rd.s)), y=c(dpxng.hpdird[1,],rev(dpxng.hpdird[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpxng.mnrd~rd.s)	#
	points(dpixrdmn~rdrd,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	mtext("road density m/km^2",side=1,line=2.2)#
plot(dpix.mns~c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Change in Duckweed Area",side=2,line=2.5)#
	legend(3.25,5200,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
dev.off()
pdf("~/Dropbox/salt BT round 2/dpix_sigcats_withoutgeno.pdf",width=7.75,height=3)#
par(mfrow=c(1,2))#
par(mar=c(4,4,1,1))#
plot(dpixlocmn~locloc,pch=NA,ylab="",xlab="",ylim=c(-4000,15000))#biodat$area~biodat$loc#
	polygon(c(km.s,rev(km.s)), y=c(dpx.hpdiloc[1,],rev(dpx.hpdiloc[2,])), col=rgb(0,0,0,alpha=0.5), border=NA)#
	lines(dpx.mnloc~km.s)	#
	points(dpixlocmn~locloc,pch=16) #biodat$area~biodat$loc,pch=16, cex=0.5)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	mtext("km from city center",side=1,line=2.2)#
plot(dpix.mns~c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),xaxt="n",xlab="",ylab="", cex=2, xlim=c(1.5,5),#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)),#
		ylim=c(1000,5200))#
	arrows(c(2,2.1,2.2,2.3,3,3.1,3.2,3.3),dpix.mns-dpix.ses,y1=dpix.mns+dpix.ses,length=0,#
		col = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)), lwd=2)#
	axis(side=1, at=c(2,3),labels=c("disrupted","local"))#
	mtext("microbes",side=1,line=2.2)#
	mtext("Duckweed Change in Area",side=2,line=2.5)#
	legend(3.25,5200,c("Neither","1 mg/L BZT","0.8 g/L Salt","Both"), bty="n",#
		 fill = c(rgb(0,0,0),rgb(0,0,0.75),rgb(0.75,0,0),rgb(0.75,0,0.75)))#
# 	legend(3,12000,c("0 mg/L BZT","1 mg/L BZT"), bty="n",#
# 		 fill = c(rgb(0,0,0),rgb(0.75,0,0),rgb(0,0,0.75),rgb(0.75,0,0.75)))#
dev.off()
